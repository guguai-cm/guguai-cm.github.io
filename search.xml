<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python学习笔记</title>
      <link href="/posts/297a89d9.html"/>
      <url>/posts/297a89d9.html</url>
      
        <content type="html"><![CDATA[<h1>Python 学习</h1><p><font color='red'>在终端输入python就可以进入交互模式，输入quit()就可以退出交互模式</font></p><p>电脑用来还原点，之前保存的照片还没有上传到图床，显示不出来就去掉了</p><h2 id="20220414">20220414</h2><h3 id="注意事项">注意事项</h3><ul><li><p>python缩进重要</p></li><li><p>变量和c语言中差不多</p></li><li><p>中文字符可以作为变量</p></li><li><p>x,y交换元素值可以写成x,y=y,x</p></li><li><p>print(‘I love china.’)</p><p>print(“I love china.”)</p></li><li><p>使用单引号、双引号要注意引号要成对</p><p>出现不可避免的单引号要用双引号</p><p>双引号情况可以用单引号</p><p>也可以用转义符，如print(‘&quot;Life is short ,let’s learn Python’)</p></li><li><p>\n，跟c语言一样</p></li><li><p>Alt+P表示上一个代码，感觉vscode中没用</p></li></ul><h2 id="20220416">20220416</h2><h3 id="输出讲解">输出讲解</h3><ul><li><p>原始字符串</p><p>如果想输出\需要两个\</p><p>或者在字符串前加个r表示输出原始字符串</p><p><font color='red'>\不能在后面，否则表示在输出还没完</font>就会继续输出</p><p>三引号，要成双成对，要么都是三个单引号要么就是三个双引号，表示输出长字符串</p></li><li><p>字符串的加法，字符串的加法表示拼接</p></li><li><p>在输出中乘数字，表示执行多少遍要输出的语句，如print(‘&quot;Life is short ,let’s learn Python\n’*5)，就表示输出&quot;Life is short ,let’s learn Python\n&quot;五次</p></li></ul><h3 id="if的部分知识">if的部分知识</h3><ul><li><p>if条件<font color='red'>:</font></p><p>​            真时执行的语句</p><p>else<font color='red'>:</font></p><p>​            假时执行的语句</p></li><li><p>在python中运算符大体都和c语言相像，有== 和!=，不同的是<font color='red'>相等是is 不相等是is not</font>（还未解释）</p></li><li><p><font color='red'>一定要注意缩进</font>，只要是同层次的缩进要一样</p></li><li><p>while 的使用和c语言一样，只是没有大括号，用缩进来显示，后面是<font color='red'>:</font></p></li><li><p>break语句跳出一层循环体</p></li><li><p>random可以生成伪随机数</p><p>要是用它得在文档前用：import random</p><p>随机生成数语句为random.randint(x,x)(x表示范围)</p></li><li><p>x = random.getstate()</p><p>print(x)</p><p>再随机输出几个数后用</p><p>random.setstate(x)可以用来复刻随机数</p></li></ul><h3 id="整数解释">整数解释</h3><ul><li><p><font color='purple'>python的整数长度不受限制</font></p></li><li><p>浮点数</p><p>如果单独0.1+0.2是大于0.3的</p><p>要确保精度的话需要如下操作：</p><p>import decimal</p><p>a = decimal.Decimal(‘0.1’)</p><p>b = decimal.Decimal(‘0.2’)</p><p>c = decimal.Decimal(‘0.3’)</p><p>如此 a+b = 0.3了,或a+b=c</p></li><li><p>在python，0.00005表示为5e-05</p></li><li><p>复数一般表示为 1+2j</p><p>x=1+2j</p><p>用x.real来获取实部</p><p>用x.imag来获取虚部（都是用浮点数来表示）</p></li></ul><h3 id="运算符">运算符</h3><ul><li><p><font color='red'>运算符</font></p><ul><li><p>//就是将除的结果若有小数则向下取整，即取比目标小的最大整数</p></li><li><p>%求余</p></li><li><p>divmod(x,y),返回（x//y,x%y)</p></li><li><p>abs(x)返回该数的绝对值，如果输入的是复数则返回该数的模</p></li><li><p>int(x)若是浮点数就之间将小数部分去掉</p></li><li><p>float（x）若是整数则加上.0</p></li><li><p>complex（x）是求复数</p><p>如（1+2j）</p></li><li><p>pow(x,y)计算x的y次方</p><p>pow（x,y,z）表示为x ** y % z</p></li><li><p>x ** y 计算x的y次方</p></li><li><p><font color='red'>用is判断两个变量的地址是否相同</font></p><p>判断两个对象的身份表示，即他们的id，以下为例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a == b</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a <span class="keyword">is</span> b</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c = <span class="number">1.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = <span class="number">1.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c == d</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c <span class="keyword">is</span> d</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>e = <span class="string">&quot;abc&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = <span class="string">&quot;abc&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>e == f</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>e <span class="keyword">is</span> f</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>g = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>h = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>g == h</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>g <span class="keyword">is</span> h</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>i = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>j = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>i == j</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>i <span class="keyword">is</span> j</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="布尔型">布尔型</h3><ul><li><p>布尔型 利用bool( )可以显示其中的布尔型</p><p>空字符串是false还有以下情况：</p><p>定义为False的对象: None 和False</p><p>值为0的数字类型: 0, 0.0, 0j, Decimal(0), Fraction(0, 1)(分子为零，分母为一)</p><p>空的序列和集合: &quot;, (), [],{}, set(), range(0)</p></li><li><p>1是true 0是false</p></li><li><p>以下两个都行</p><p>if bool(250) :                     if 250 :</p><p>print(‘true’)                        print(‘true’)</p><p>else :                                  else :</p><p>print(‘false’)                        print(‘false’)</p></li><li><p>有三个逻辑运算（布尔运算）</p><p>and左右边同时为true，结果为true</p><p>or左右两边有一个为true，结果为true</p><p>not表示正误取反</p></li><li><p>Python中任何对象都能直接进行真值测试(测试该对象的布尔类型值为True或者False) ，用于if或者while语句的条件判断，也可以做为布尔逻辑运算符的操作数。</p><p>3 and 4 返回4</p><p>4 or 5    返回4</p><p>“FishC” and &quot;LOVE&quot;返回’LOVE’</p><p>“FishC” or 250 返回 ‘FishC’</p></li></ul><h2 id="20220417">20220417</h2><h3 id="运算符部分知识">运算符部分知识</h3><ul><li><p>短路逻辑核心思想:从左往右，只有当第一个操作数的值无法确定逻辑运算的结果时，才对第二个操作数进行求值。</p><p>比如(not 1) or (0 and 1) or (3 and 4) or (5 and 6) or (7 and 8 and 9)，有括号先处理括号的内容，输出结果是4。</p></li><li><p><font color='red'>运算符优先级</font></p><table><thead><tr><th style="text-align:center">优先级</th><th style="text-align:center">运算符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">lambda</td><td style="text-align:center">Lambda表达式</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">if - else</td><td style="text-align:center">条件表达式</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">or</td><td style="text-align:center">布尔&quot;或&quot;</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">and</td><td style="text-align:center">布尔&quot;与&quot;</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">not x</td><td style="text-align:center">布尔&quot;非&quot;</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">in,not in,<br />is,is not,<br />&lt;,&lt;=,&gt;,&gt;=,!=,==</td><td style="text-align:center">成员测试，同一性测试，比较</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">|</td><td style="text-align:center">按位或</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">^</td><td style="text-align:center">按位异或</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">&amp;</td><td style="text-align:center">按位与</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">&lt;&lt;,&gt;&gt;</td><td style="text-align:center">移位</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">+,-</td><td style="text-align:center">加法，减法</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">*,@,/,//,%</td><td style="text-align:center">乘法，矩阵乘法，除法，地板除，取余数</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center">+x,-x,~x</td><td style="text-align:center">正号，负号，按位翻转</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">**</td><td style="text-align:center">指数</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center">await x</td><td style="text-align:center">Await表达式</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center">x[index],x[index:index],<br />x(arguments…),x.attribute</td><td style="text-align:center">下标，切片，函数调用，属性引用</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center">(expressions…),[expressions…],{key:value…}，{expressions…}</td><td style="text-align:center">绑定或元组显示，列表显示，字典显示，集合显示</td></tr></tbody></table><p>运算符优先级高于比较运算符，比较运算符的优先级比布尔判断高</p><p>布尔运算的优先级 先非（not）再与（and）最后或（or）</p></li></ul><h3 id="图">图</h3><p>流程图（线性思维）</p><p>思维导图（发散性思维）</p><h3 id="分支与循环">分支与循环</h3><ul><li><p>书写if大部分和c语言的一样，只是没有了大括号，用相同缩进来表示同一级关系</p></li><li><p>以下写<font color='red'>不同的</font></p><ul><li><p>if condition1 :<br>statement(S)<br>elif condition2 :<br>statement(S)<br>elif condition3 :<br>statement(S)</p></li><li><p>if condition1 :<br>statement(S)<br>elif condition2 ;<br>statement(S)<br>elif condition3:<br>statement(S)<br>else:<br>statement(S)        //表示以上情况都不符合从而执行</p></li><li><p>条件成立时执行的语句 if condition else 条件不成立时执行的语句，如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;抱歉，未满18岁 禁止访问。&quot;</span>) <span class="keyword">if</span> age &lt; <span class="number">18</span> <span class="keyword">else</span> <span class="built_in">print</span>( <span class="string">&quot;欢迎您来^0^&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><pre><code class="language-python">score = 66level = ('D' if 0 &lt;= score &lt; 60 else'C' if 60 &lt;= score &lt; 80 else'B' if 80 &lt;= score &lt; 90 else'A' if score == 100 else '请输入0~100之间的分值^o^')print(level)<figure class="highlight hsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* &lt;<span class="keyword">font</span> <span class="keyword">color</span>=<span class="string">&#x27;green&#x27;</span>&gt;分支结构的嵌套&lt;/<span class="keyword">font</span>&gt;跟c语言一样，嵌套无所谓多少层</span><br><span class="line"></span><br><span class="line"><span class="meta">### 循环结构</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#### while</span></span><br><span class="line"></span><br><span class="line">* &lt;<span class="keyword">font</span> <span class="keyword">color</span>=<span class="string">&#x27;green&#x27;</span>&gt;<span class="keyword">while</span>循环&lt;/<span class="keyword">font</span>&gt;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> condition:</span><br><span class="line">  statement(s)</span><br><span class="line"></span><br><span class="line">* &lt;<span class="keyword">font</span> <span class="keyword">color</span>=<span class="string">&#x27;green&#x27;</span>&gt;python中存在&lt;<span class="keyword">font</span> <span class="keyword">color</span>=<span class="string">&#x27;red&#x27;</span>&gt;+=号&lt;/<span class="keyword">font</span>&gt;&lt;/<span class="keyword">font</span>&gt;</span><br><span class="line"></span><br><span class="line">* &lt;<span class="keyword">font</span> <span class="keyword">color</span>=<span class="string">&#x27;red&#x27;</span>&gt;<span class="keyword">continue</span>是跳出本次循环回到循环的开头；<span class="keyword">break</span>是直接跳出循环体执行后面的语句&lt;/<span class="keyword">font</span>&gt;</span><br><span class="line"></span><br><span class="line">* <span class="keyword">while</span>中也有<span class="keyword">else</span>语句，当循环条件不再为真的时候，<span class="keyword">else</span>语句才会被执行，如果是用<span class="keyword">break</span>语句跳出，<span class="keyword">else</span>语句不在执行</span><br><span class="line"></span><br><span class="line">* 循环玩嵌套，<span class="keyword">break</span>和<span class="keyword">continue</span>都只能作用于一层循环</span><br><span class="line"></span><br><span class="line">* 在<span class="keyword">print</span>中最后写上&lt;<span class="keyword">font</span> <span class="keyword">color</span>=<span class="string">&#x27;blue&#x27;</span>&gt;<span class="keyword">end</span>=<span class="string">&quot; &quot;</span>是用来防止自动换行的&lt;/<span class="keyword">font</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#### for</span></span><br><span class="line"></span><br><span class="line">* &lt;<span class="keyword">font</span> <span class="keyword">color</span>=<span class="string">&#x27;green&#x27;</span>&gt;<span class="keyword">for</span>循环&lt;/<span class="keyword">font</span>&gt;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> 变量 in 可迭代对象 :</span><br><span class="line">  statement(S)</span><br><span class="line"></span><br><span class="line">* 跟<span class="keyword">for</span>一起常用的是range，用法有如下&lt;<span class="keyword">font</span> <span class="keyword">color</span>=<span class="string">&#x27;red&#x27;</span>&gt;不包含<span class="keyword">stop</span>那个数&lt;/<span class="keyword">font</span>&gt;</span><br><span class="line"></span><br><span class="line">  range(<span class="keyword">stop</span>)</span><br><span class="line">  range(start,<span class="keyword">stop</span>)</span><br><span class="line">  range(start,<span class="keyword">stop</span>,step)</span><br><span class="line"></span><br><span class="line">* 输出素数</span><br><span class="line"></span><br><span class="line">  ```python</span><br><span class="line">  <span class="keyword">for</span> i in range(<span class="number">2</span>, <span class="number">10</span>):</span><br><span class="line">  <span class="keyword">for</span> j in range(<span class="number">2</span>, i):</span><br><span class="line">  <span class="keyword">if</span> i % j == <span class="number">0</span>:</span><br><span class="line">  <span class="keyword">break</span></span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">  <span class="keyword">print</span>(i)</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul><h3 id="列表">列表</h3><ul><li><p>如rhyme = [1,2,3,4,5,“上山打老虎”]</p><p>print(rhyme)</p><p>序列 for each in rhyme:</p><p>​print(each)</p><p>元素下标从<font color='red'>0</font>开始，和c语言一样</p></li><li><p>len(rhyme)来获取字符串长度</p></li><li><p><font color='red'>列表也可以从-1开始，表示从最后一个开始，在其前面的元素依次往前递减</font></p></li><li><p>列表切片支持</p><p>rhyme[0:3]、rhyme[ :3]输出前三个元素</p><p>rhyme[3:6]、rhyme[3: ]输出后三个元素</p><p>rhyme[ : ]输出全部元素</p><p>rhyme[0:6:2]，输出为[1,3,5]，其中2表示步幅或跨度值</p><p>如果想倒叙输出可以用rhyme[ : :-1]</p></li></ul><h2 id="20220419">20220419</h2><h3 id="列表-2">列表</h3><ul><li><p>增加</p><p>列表名.append()表示在列表最后添加一个元素</p><hr><p>列表名.extend()表示添加一个可迭代的对象</p><ul><li><font color='red'>注意</font>extend()方法的参数必须是一个可迭代对象，新的内容是追加到原列表最后一个元素的后面。</li><li>也可以写成s[len(s): ] = [6]或s[len(s): ] = [7,8,9],与append和extend效果一样</li></ul><hr><p>s.insert(位置,元素)表示用来在指定位置插入元素<font color='red'>注：</font>列表开头是0</p></li><li><p>删除</p><p>列表名.remove(元素名)</p><ol><li>如果列表中存在多个匹配的元素，那么它只会删除第一个。</li><li>如果指定的元素不存在，程序会报错</li></ol><hr><p>列表名.pop(位置)表示删除指定位置上的元素</p><hr><p>用于一次性删除列表，用 列表名.clear来删除列表里的元素</p></li><li><p>修改</p><p>列表名[要替换元素位置] = (要替换成的元素)（不需要括号）</p><p>或者列表名[要替换某元素及其后面的元素的首个地址: ] = [要替换的内容]</p><hr><p>排序算法</p><ul><li>从小到大 列表名.sort()即可</li><li>从大到小 在sort的基础上加上列表名.reverse()指，其中reverse表示将第一个元素和最后一个元素互换位置，以此类推</li><li>如果写成:列表名.sort(reverse=True),输出结果和先用sort再用reverse一样</li></ul></li><li><p>查</p><p>列表名.count(所要查找的元素)，返回列表中该元素的个数</p><p>列表名.index(所要查找的元素)，返回列表中该元素的索引值（我的理解是位置）</p><p>当你要修改列表中某一元素却不知道元素索引，可以写成列表名[列表名.index(要修改的元素)] = 要修改成元素</p><ul><li>如果有多个相同的元素值返回修改第一个元素</li></ul><p>index(x,start,end),后面两个元素表示要查找元素的范围</p></li><li><p>拷贝</p><p>copy()如：(nums有值)nums_copy1 = nums.copy()</p><p>或者用切片的方法 nums_copy2 = nums[ : ]</p><p>这是浅拷贝</p></li></ul><h2 id="20220420">20220420</h2><h3 id="列表-3">列表</h3><ul><li><p>列表的加法和乘法</p><p>列表的加法就是拼接 列表名 + 列表名</p><p>列表的乘法就是将列表元素重复相应遍数 写法：列表名 * 遍数</p><p>​没法两个列表相乘</p></li><li><p>嵌套列表</p><ul><li><p>编写</p><p>矩阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">matrix = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],[<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>],[<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]</span><br><span class="line">matrix = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">[<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>],</span><br><span class="line">[<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]</span><br></pre></td></tr></table></figure></li><li><p>访问（遍历）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> matrix:</span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> i:</span><br><span class="line"><span class="built_in">print</span>(each, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>( )</span><br></pre></td></tr></table></figure><p>访问单个</p><p>martix[0]输出第一行</p><p>martix[0][1]表示输出第一行第二个元素</p></li><li><p>正常方法：for i in range(3):<br>A[i] =[0] * 3<br>输出结果为：[[0,0,0], [0,0,0], [0,0,0]]</p><p>如果用B=[[0]*3]*3(影响了每一行的元素)</p><p>输出结果是：[[0, 0, 0],[0, 0, 0],[0, 0, 0]]<br>差别在改A:A[1][1] = 1<br>结果是：[[0, 0, 0],[0, 1, 0],[0, 0, 0]]<br>改B:B[1][1] = 1<br>结果是：[[0,1,0],[0,1,0],[0,1,0]]</p></li><li><p>原因是在python中，他们的存储方式不同</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A[<span class="number">0</span>] <span class="keyword">is</span> A[<span class="number">1</span>] <span class="literal">False</span></span><br><span class="line">B[<span class="number">0</span>] <span class="keyword">is</span> B[<span class="number">1</span>] <span class="literal">True</span></span><br></pre></td></tr></table></figure><p>列表推导式的写法是s = [[0] * 3 for i in range(3)](效果和A的一样)</p></li></ul></li><li><p>在python中有些存储方式与c语言不同，是将变量与数据挂钩，这就导致了如果有两个变量和数据挂钩，那一个变量更改数据是会将第二个变量中的数据也更改掉，这就需要独立列表</p><p>要得到独立的列表使用拷贝，用copy浅拷贝是没问题的（方法参照上面），这时候更改数据是不会对其他变量进行改变</p><p>用于嵌套列表，用浅拷贝就没什么用，这就需要深拷贝，用浅拷贝只是拷贝了只是其引用。</p><p>如果用深拷贝，就需要引用copy模块，以下为参考代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> copy</span><br><span class="line">x=[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]]</span><br><span class="line">y = copy.deepcopy(x)</span><br></pre></td></tr></table></figure><p>深拷贝将列表原文件拷贝时也拷贝引用，默认使用的浅拷贝，这样效率高</p></li><li><p>代码推导式：[表达式 for target in iterabLe ]</p></li><li><p><font color='red'>ord函数将字符串转换为相应的编码</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">matrix = [[<span class="number">1</span>， <span class="number">2</span>，<span class="number">3</span>],</span><br><span class="line">[<span class="number">4</span>，<span class="number">5</span>，<span class="number">6</span>],</span><br><span class="line">[<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]</span><br><span class="line">col2 = [row[<span class="number">1</span>] <span class="keyword">for</span> row <span class="keyword">in</span> matrix] <span class="comment">#复制每行第二个元素</span></span><br></pre></td></tr></table></figure><p>高级点的列表推导式：[ expression for target in iterable if condition]</p><p>先执行循环语句在执行判断语句最后执行表达式</p><p>判断语句嵌套[expression for target1 in iterable1<br>for target2 in iterable2<br>for targetN in iterableN]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">matrix = [[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]]</span><br><span class="line">flatten = [col <span class="keyword">for</span> row <span class="keyword">in</span> matrix <span class="keyword">for</span> col <span class="keyword">in</span> row ]</span><br><span class="line"><span class="comment"># 实现降维</span></span><br><span class="line">flatten = [ ]</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> matrix:</span><br><span class="line"><span class="keyword">for</span> col <span class="keyword">in</span> row:</span><br><span class="line">flatten.append(col)</span><br></pre></td></tr></table></figure><p>外层循环放在前面的for，内侧循环放在后面的for</p><p><font color='red'>列表表达式的最原始表示</font>：</p><p>[expression for target1 in iterable1 if condition1<br>for target2 in iterable2 if condition2<br>for targetN in iterableN if condit ionN]</p></li><li><p><font color='red'>KISS原则</font>：Keep It Simple &amp; Stupid</p></li></ul><h3 id="元组">元组</h3><ul><li><p>元组与列表的区别 元组使用小括号，列表使用中括号</p><p>元组也可以不用括号，也可以用切片，但不能修改内部元素</p><p>rhyme[ : :-1]显示倒转，是导出了一个新的列表</p></li><li><p>元组只有查，即只支持count和index，跟列表一样</p></li><li><p>加号和乘号和列表一样</p></li><li><p>元组也可以嵌套，用逗号，代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">t = (<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line">w = s,t</span><br><span class="line"><span class="comment"># 输出为((1,2,3),(4,5,6))</span></span><br></pre></td></tr></table></figure><p>元组也支持迭代，如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> w:</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> i:</span><br><span class="line">        <span class="built_in">print</span>(each)</span><br></pre></td></tr></table></figure><p>元组可以用列表推导式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>([each * <span class="number">2</span> <span class="keyword">for</span> each <span class="keyword">in</span> s]</span><br><span class="line"><span class="comment">#输出结果为[2,4,6,8,10]</span></span><br></pre></td></tr></table></figure><p>如何生成只有一个元素的元组，代码如下：x = (520,)</p><p><font color='red'>可以用type来看是什么类型</font></p></li><li><p>打包和解包</p><ul><li><p>生成一个元组我们也称为元组的打包</p></li><li><p>将他复制到其他元素就称为解包（这种行为适用于任何的序列类型）</p></li><li><p>代码如下：</p></li><li><pre><code class="language-python">t = (123,&quot;FishC&quot;,3.14)x, y, z = t<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    赋值号左边的变量名数量必须跟右侧序列的元素数量一致</span><br><span class="line"></span><br><span class="line">* 多重赋值就是先通过元组打包再解包</span><br><span class="line"></span><br><span class="line">* &lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;单独一个下划线\_表示一个匿名变量&lt;/font&gt;</span><br><span class="line"></span><br><span class="line">* &lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;正常来说，元组的元素是不可变的，但如果元组的元素是指向一个可变的列表那么我们可以修改列表里的内容&lt;/font&gt;如：</span><br><span class="line"></span><br><span class="line">* s = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">  t = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">  W=(s,t)</span><br><span class="line">  输出：([<span class="number">1</span>, <span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])</span><br><span class="line">  w[<span class="number">0</span>]\[<span class="number">0</span>] =<span class="number">0</span></span><br><span class="line">  输出：([<span class="number">0</span>, <span class="number">2</span>,<span class="number">3</span>]，[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment">## 20220421</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 字符串</span></span><br><span class="line"></span><br><span class="line">* &lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;字符串是不可变的对象&lt;/font&gt;，一般是按照规则生成一个新的字符串</span><br><span class="line"></span><br><span class="line">* 大小写字母变换</span><br><span class="line"></span><br><span class="line">  |        函数         |                             作用                             |</span><br><span class="line">  | <span class="symbol">:-----------------</span>: | <span class="symbol">:----------------------------------------------------------</span>: |</span><br><span class="line">  | 变量名.capitalize() |           将字符串首字母变成大写，其他字母变成小写           |</span><br><span class="line">  |  变量名.casefole()  |                返回所以字母都是小写的新字符串                |</span><br><span class="line">  |   变量名.title()    | 将字符串中每个单词的首字母变成大写，该单词的其他字母变成小写 |</span><br><span class="line">  |  变量名.swapcase()  |                 将字符串中所有字母大小写翻转                 |</span><br><span class="line">  |   变量名.upper()    |                      将所有字母变成大写                      |</span><br><span class="line">  |   变量名.lower()    |                      将所有字母变成小写                      |</span><br><span class="line"></span><br><span class="line">* 左中右对齐</span><br><span class="line"></span><br><span class="line">  &lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;如果设置的宽度比实际字符串的长度小,就原字符串输出&lt;/font&gt;</span><br><span class="line"></span><br><span class="line">  |        函数         |       作用       |</span><br><span class="line">  | <span class="symbol">:-----------------</span>: | <span class="symbol">:--------------</span>: |</span><br><span class="line">  | 变量名.center(宽度) |      中对齐      |</span><br><span class="line">  | 变量名.ljust(宽度)  |      左对齐      |</span><br><span class="line">  | 变量名.rjust(宽度)  |      右对齐      |</span><br><span class="line">  | 变量名.zfill(宽度)  | 用零填充前面空格 |</span><br><span class="line"></span><br><span class="line">  &lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;前三个在宽度后面添加,字符串,可以用来设置填充内容&lt;/font&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 20220424</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 字符串</span></span><br><span class="line"></span><br><span class="line">* 查找(方括号代表里面的内容是可选的)</span><br><span class="line"></span><br><span class="line">  |               函数                |                             作用                             |                       参数作用                       |</span><br><span class="line">  | <span class="symbol">:-------------------------------</span>: | <span class="symbol">:----------------------------------------------------------</span>: | <span class="symbol">:--------------------------------------------------</span>: |</span><br><span class="line">  | 变量名.count(sub[ ,start[ ,<span class="keyword">end</span>]]) |        查找sub参数指定的子字符串在字符串中出现的次数         | x.count(<span class="string">&quot;海&quot;</span>,<span class="number">0</span>,<span class="number">5</span>) start表示起始位置，<span class="keyword">end</span>表示终止位置 |</span><br><span class="line">  | 变量名.find(sub[ ,start[ ,<span class="keyword">end</span>]])  | 用于定位sub参数指定的子字符串在字符串中的索引下的标值（&lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;从左往右&lt;/font&gt;）就是下标值，找不到返回<span class="number">-1</span> |  示例中就直接子字符串，没有前后限制（x.find(<span class="string">&quot;海&quot;</span>)）  |</span><br><span class="line">  | 变量名.rfind(sub[ ,start[ ,<span class="keyword">end</span>]]) | 用于定位sub参数指定的子字符串在字符串中的索引下的标值（&lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;从右往左&lt;/font&gt;）就是下标值，找不到返回<span class="number">-1</span> |                                                      |</span><br><span class="line">  | 变量名.index(sub[ ,start[ ,<span class="keyword">end</span>]]) |   如果找不到字符串的话，会报出异常的（用来故意报出异常的）   |                      用法同find                      |</span><br><span class="line">  | 变量名.index(sub[ ,start[ ,<span class="keyword">end</span>]]) |   如果找不到字符串的话，会报出异常的（用来故意报出异常的）   |                                                      |</span><br><span class="line"></span><br><span class="line">* 替换</span><br><span class="line"></span><br><span class="line">  |                             函数                             |                             作用                             |                           参数作用                           |</span><br><span class="line">  | <span class="symbol">:----------------------------------------------------------</span>: | <span class="symbol">:----------------------------------------------------------</span>: | <span class="symbol">:----------------------------------------------------------</span>: |</span><br><span class="line">  |              新变量名 = 旧变量名.expandtabs(<span class="number">4</span>)               |          使用空格来替换制表符，并返回一个新的字符串          |           参数(<span class="number">4</span>)是指定一个tab为多少个空格(没实现)           |</span><br><span class="line">  |               字符串.replace(old,new,count=<span class="number">-1</span>)               | 返回一个将所有old的参数指定的子字符串替换为new参数指定的新字符串 |   count参数指定替换次数，如果不设置这个参数就表示替换全部    |</span><br><span class="line">  |   变量名 = str.maketrans(被替换对象，替换内容，要忽视内容)   |                                                              |                                                              |</span><br><span class="line">  | 变量名 = str.maketrans(被替换对象，替换内容)                字符串.translate(table) | 根据table参数转换后的新字符串。即出现什么替换规则的字母就进行替换 | table是表格的意思，用于指定一个转换规则的表格，用str.maketrans(x,[,y[,z]])来获取表格 |</span><br><span class="line"></span><br><span class="line">* 判断</span><br><span class="line"></span><br><span class="line">  |                             函数                             |                             作用                             |              参数作用/说明               |</span><br><span class="line">  | <span class="symbol">:----------------------------------------------------------</span>: | <span class="symbol">:----------------------------------------------------------</span>: | <span class="symbol">:--------------------------------------</span>: |</span><br><span class="line">  | 变量名.startswith(prefix[,start[,<span class="keyword">end</span>]])&lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;支持使用元组&lt;/font&gt; |       判断参数指定的子字符串是否出现在字符串的起始位置       | prefix表示字符串（可以设置起始终止位置） |</span><br><span class="line">  | 变量名.endswith(suffix[,start[,<span class="keyword">end</span>]])&lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;支持使用元组&lt;/font&gt; |       判断参数指定的子字符串是否出现在字符串的结束位置       | suffix表示字符串（可以设置起始终止位置） |</span><br><span class="line">  |                       变量名.istitle()                       |        判断字符串中是否单词首字母都是大写，其余为小写        |                                          |</span><br><span class="line">  |                       变量名.isupper()                       |                     是否所有字母都是大写                     |                                          |</span><br><span class="line">  |                       变量名.islower()                       |                     是否所有字母都是小写                     |                                          |</span><br><span class="line">  |                       变量名.isalpa()                        |                  判断字符串是否只有字母构成                  | (&lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;空格不是字母&lt;/font&gt;)  |</span><br><span class="line">  |                       变量名.isspace()                       |                   判断是否为一个空白字符串                   |       空格 <span class="title class_">TAP</span> 转义字符都返回<span class="literal">true</span>        |</span><br><span class="line">  |                     变量名.isprintable()                     |               判断字符串中是否所有字符都可打印               |          转义字符并不是可打印的          |</span><br><span class="line">  |                      变量名.isdecimal()                      |                  是否是数字（只能是<span class="number">123</span>吧）                   |                                          |</span><br><span class="line">  |                       变量名.isdigit()                       |                   是否是数字（可以是平方）                   |                                          |</span><br><span class="line">  |                      变量名.isnumeric()                      |          是否是数字（可以是罗马数字，也可以是中文）          |                                          |</span><br><span class="line">  |                       变量名.isalnum()                       | isalpha、isdecimal、isdigit、isnumeric中有一个为<span class="literal">true</span>则返回<span class="literal">true</span> |                                          |</span><br><span class="line">  |                    变量名.isidentifier()                     |            判断字符串是否是一个合法的python标识符            |                                          |</span><br><span class="line">  |           keyword模块中的&lt;br /&gt;变量名.iskeyword()            |            判断一个字符串是否为python的保留标识符            |             如<span class="keyword">if</span>，while，<span class="keyword">for</span>             |</span><br><span class="line"></span><br><span class="line">* &lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;如果函数函数中有个方括号就表示这是个可选参数&lt;/font&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 20220425</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 字符串</span></span><br><span class="line"></span><br><span class="line">* 截取  （&lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;字符串要加引号&lt;/font&gt;）</span><br><span class="line"></span><br><span class="line">  |            函数             |            作用            |                           参数含义                           |</span><br><span class="line">  | <span class="symbol">:-------------------------</span>: | <span class="symbol">:------------------------</span>: | <span class="symbol">:----------------------------------------------------------</span>: |</span><br><span class="line">  |  字符串.lstrip(chars=<span class="title class_">None</span>)  |       截去左边的留白       | 默认为<span class="title class_">None</span>，表示去掉空白。此参数用来表示要去除的字符串（按单个字符去匹配剔除） |</span><br><span class="line">  |  字符串.rstrip(chars=<span class="title class_">None</span>)  |       截去右边的留白       | 默认为<span class="title class_">None</span>，表示去掉空白。此参数用来表示要去除的字符串（按单个字符去匹配剔除） |</span><br><span class="line">  |  字符串.strip(chars=<span class="title class_">None</span>)   |     截取左右两边的留白     | 默认为<span class="title class_">None</span>，表示去掉空白。此参数用来表示要去除的字符串（按单个字符去匹配剔除） |</span><br><span class="line">  | 字符串.removeprefix(字符串) | 删去字符串开头匹配的字符串 |                    字符串不拆开来进行匹配                    |</span><br><span class="line">  | 字符串.removesuffix(字符串) | 删去字符串结尾匹配的字符串 |                    字符串不拆开来进行匹配                    |</span><br><span class="line"></span><br><span class="line">* 拆分和拼接</span><br><span class="line"></span><br><span class="line">  |                             函数                             |                作用                |                           参数含义                           |</span><br><span class="line">  | <span class="symbol">:----------------------------------------------------------</span>: | <span class="symbol">:--------------------------------</span>: | <span class="symbol">:----------------------------------------------------------</span>: |</span><br><span class="line">  |                    字符串.partition(sep)                     |    从左到右找以sep内容进行切割     |           sep表示要切割的字符，只返回找到的第一个            |</span><br><span class="line">  |                    字符串.rpartition(sep)                    |    从右往左找以sep内容进行切割     |           sep表示要切割的字符，只返回找到的第一个            |</span><br><span class="line">  |              字符串.split(sep=<span class="title class_">None</span>,maxsplit=<span class="number">-1</span>)              |      默认切割空格，以列表返回      | sep指定分隔符，第二个参数表示次数，<span class="number">-1</span>表示找到分隔符就切下去，<span class="number">1</span>就切一刀（从左往右） |</span><br><span class="line">  |             字符串.rsplit(sep=<span class="title class_">None</span>,maxsplit=<span class="number">-1</span>)              |      默认切割空格，以列表返回      | sep指定分隔符，第二个参数表示次数，<span class="number">-1</span>表示找到分隔符就切下去，<span class="number">1</span>就切一刀（从右为左） |</span><br><span class="line">  |              字符串.splitlines(keepends=<span class="title class_">False</span>)               | 按行进行分割，结果以列表的形式返回 |     无参数，默认为<span class="literal">false</span>不包含换行符，<span class="literal">true</span>表示包含换行符      |</span><br><span class="line">  | 字符串.join(iterable)，如<span class="string">&quot;.&quot;</span>.([<span class="string">&quot;www&quot;</span>,<span class="string">&quot;FishC&quot;</span>,<span class="string">&quot;com&quot;</span>])输出www.<span class="title class_">FishC</span>.com |           作为分隔符使用           |              可以用元组或列表，也可以没有分隔符              |</span><br><span class="line"></span><br><span class="line"><span class="comment">## 20220427</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 字符串</span></span><br><span class="line"></span><br><span class="line">* 格式化字符串（我的理解是在字符串当中输出变量名所包含的内容）</span><br><span class="line"></span><br><span class="line">  如x = <span class="number">2022</span> <span class="string">&quot;今年是&#123;&#125;&quot;</span>.format(x)</span><br><span class="line"></span><br><span class="line">  与c语言中不同的是&lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;花括号内可以选择元素，元素编号从<span class="number">0</span>开始，统一元素可以多次被调用&lt;/font&gt;</span><br><span class="line"></span><br><span class="line">  如print(<span class="string">&quot;我叫&#123;name&#125;，我爱&#123;0&#125;。喜爱&#123;0&#125;的人，运气都不会太差。&quot;</span>. format(<span class="string">&quot;Python&quot;</span>,name=<span class="string">&quot;小甲鱼&quot;</span>))</span><br><span class="line"></span><br><span class="line">* 可以用花括号注释花括号来注释花括号，如&#123;&#123;&#125;&#125;</span><br><span class="line"></span><br><span class="line">* 字符串格式化常用语法（花括号内常用的参数）</span><br><span class="line"></span><br><span class="line">  |  语法名  |                        作用                        |</span><br><span class="line">  | <span class="symbol">:------</span>: | <span class="symbol">:------------------------------------------------</span>: |</span><br><span class="line">  | <span class="string">&quot;&#123;:^10&#125;&quot;</span> |                   字符串居中对齐                   |</span><br><span class="line">  | <span class="string">&quot;&#123;:&lt;10&#125;&quot;</span> |                    字符串左对齐                    |</span><br><span class="line">  | <span class="string">&quot;&#123;:&gt;10&#125;&quot;</span> |                    字符串右对齐                    |</span><br><span class="line">  | <span class="string">&quot;&#123;:=10&#125;&quot;</span> | 强制将填充放在符号（如果有）之后但在数字之前的位置 |</span><br><span class="line"></span><br><span class="line">  &lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;[[fill]align]\[sign][<span class="comment">#]\[0][width]\[grouping_option][.precision]\[type]&lt;/font&gt;</span></span><br><span class="line"></span><br><span class="line">  align表示对齐方法，width表示宽度，<span class="number">0</span>表示自动填充<span class="number">0</span>（只对数字起作用），fill表示填充的内容</span><br><span class="line"></span><br><span class="line">  &lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;冒号左边为要输入的参数，冒号右边为格式&lt;/font&gt;</span><br><span class="line"></span><br><span class="line">* 符号选项sign仅对数字有用</span><br><span class="line"></span><br><span class="line">  |  值  |                    含义                    |</span><br><span class="line">  | <span class="symbol">:--</span>: | <span class="symbol">:----------------------------------------</span>: |</span><br><span class="line">  |  +   |     在正数前添加正号，在负号前添加负号     |</span><br><span class="line">  |  -   | 只在负号前添加负号，正号不添加（）默认行为 |</span><br><span class="line">  | 空格 |     在正数前添加空格，在负号前添加负号     |</span><br><span class="line"></span><br><span class="line">* 千位分隔符grouping_option：&lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;_(下划线)和,(逗号)&lt;/font&gt;</span><br><span class="line"></span><br><span class="line">  如<span class="string">&quot;&#123;:,&#125;&quot;</span>.forma(<span class="number">1234</span>)，输出<span class="number">1</span>,<span class="number">234</span></span><br><span class="line"></span><br><span class="line">* 精度[&lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;.&lt;/font&gt;precision]：</span><br><span class="line"></span><br><span class="line">  对于[type]设置为<span class="string">&#x27;f&#x27;</span>或<span class="string">&#x27;F&#x27;</span> 的浮点数来说,是限定小数点&lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;后&lt;/font&gt;显示多少个数位，如<span class="string">&quot;&#123;:.2f&#125;&quot;</span>.format(<span class="number">3.1415</span>)，输出<span class="number">3.14</span></span><br><span class="line">  对于[type]设置为<span class="string">&#x27;g&#x27;</span>或<span class="string">&#x27;G&#x27;</span>的浮点数来说，是限定小数点&lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;前后&lt;/font&gt;一共显示多少个数位，如<span class="string">&quot;&#123;:.2g&#125;&quot;</span>.format(<span class="number">3.1415</span>)，输出<span class="number">3.1</span></span><br><span class="line">  对于非数字类型来说，限定的是&lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;最大字段&lt;/font&gt;的大小，如<span class="string">&quot;&#123;:.6&#125;&quot;</span>.format(<span class="string">&quot;I love girl&quot;</span>)，输出I love</span><br><span class="line">  对于&lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;整数&lt;/font&gt;类型来说，则&lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;不允许&lt;/font&gt;使用[.precision]选项</span><br><span class="line"></span><br><span class="line">* 类型选项type；决定了数据应当如何呈现</span><br><span class="line"></span><br><span class="line">  * 整数</span><br><span class="line"></span><br><span class="line">    |  值  |                        含义                         |</span><br><span class="line">    | <span class="symbol">:--</span>: | <span class="symbol">:-------------------------------------------------</span>: |</span><br><span class="line">    | <span class="string">&#x27;b&#x27;</span>  |              将参数以二进制的形式输出               |</span><br><span class="line">    | <span class="string">&#x27;c&#x27;</span>  |            将参数以<span class="title class_">Unicode</span>字符的形式输出            |</span><br><span class="line">    | <span class="string">&#x27;d&#x27;</span>  |              将参数以十进制的形式输出               |</span><br><span class="line">    | <span class="string">&#x27;o&#x27;</span>  |              将参数以八进制的形式输出               |</span><br><span class="line">    | <span class="string">&#x27;x&#x27;</span>  |             将参数以十六进制的形式输出              |</span><br><span class="line">    | <span class="string">&#x27;X&#x27;</span>  |             将参数以十六进制的形式输出              |</span><br><span class="line">    | <span class="string">&#x27;n&#x27;</span>  | 和<span class="string">&#x27;d&#x27;</span>一样，但它会使用当前设置的分隔符插入到恰当位置 |</span><br><span class="line">    | <span class="title class_">None</span> |                      和<span class="string">&#x27;d&#x27;</span>一样                      |</span><br><span class="line"></span><br><span class="line">  * 浮点数或者负数</span><br><span class="line"></span><br><span class="line">    |  值  |                             含义                             |</span><br><span class="line">    | <span class="symbol">:--</span>: | <span class="symbol">:----------------------------------------------------------</span>: |</span><br><span class="line">    | <span class="string">&#x27;e&#x27;</span>  | 将参数以科学记数法的形式输出(以字母<span class="string">&#x27;e&#x27;</span>来标示指数，默认精度为<span class="number">6</span>) |</span><br><span class="line">    | <span class="string">&#x27;E&#x27;</span>  | 将参数以科学记数法的形式输出(以字母<span class="string">&#x27;E&#x27;</span>来标示指数，默认精度为<span class="number">6</span>) |</span><br><span class="line">    | <span class="string">&#x27;f&#x27;</span>  | 将参数以定点表示法的形式输出(<span class="string">&quot;不是数&quot;</span>用<span class="string">&#x27;nan&#x27;</span>标示, 无穷用<span class="string">&#x27;inf&#x27;</span>标示,默认精度为<span class="number">6</span>) |</span><br><span class="line">    | <span class="string">&#x27;F&#x27;</span>  | 将参数以定点表示法的形式输出(<span class="string">&quot;不是数&quot;</span>用<span class="string">&#x27;NAN&#x27;</span>标示, 无穷用<span class="string">&#x27;INF&#x27;</span>标示,默认精度为<span class="number">6</span>) |</span><br><span class="line">    | <span class="string">&#x27;g&#x27;</span>  |        通用格式,小数以<span class="string">&#x27;f&#x27;</span>形式输出,大数以<span class="string">&#x27;e&#x27;</span>的形式输出        |</span><br><span class="line">    | <span class="string">&#x27;G&#x27;</span>  |       通用格式，小数以<span class="string">&#x27;F&#x27;</span>形式输出,大数以<span class="string">&#x27;E&#x27;</span>的形式输出        |</span><br><span class="line">    | <span class="string">&#x27;n&#x27;</span>  | 跟<span class="string">&#x27;g&#x27;</span>类似，不同之处在于它会使用当前语言环境设置的分隔符插入到恰当的位置 |</span><br><span class="line">    | <span class="string">&#x27;%&#x27;</span>  | 以百分比的形式输出(将数字乘以<span class="number">100</span>并显示为定点表示法(<span class="string">&#x27;φ&#x27;</span>)的形式，后面附带一个百分号 |</span><br><span class="line">    | <span class="title class_">None</span> | 类似于<span class="string">&#x27;g&#x27;</span>,不同之处在于当使用定点表示法时，小数点后将至少显示一位;默认精度与给定值所需的精度一致 |</span><br><span class="line"></span><br><span class="line">  * 高端玩法：<span class="string">&quot;&#123;:&#123;fill&#125;&#123;align&#125;&#123;width&#125;.&#123;prec&#125;&#123;ty&#125;&#125;&quot;</span>.format(<span class="number">3.1415</span>, fill=<span class="string">&#x27;+&#x27;</span>, align=<span class="string">&#x27;^&#x27;</span>, width=<span class="number">10</span>, prec=<span class="number">3</span>,ty=<span class="string">&#x27;g&#x27;</span>)</span><br><span class="line"></span><br><span class="line">* <span class="comment">#：表示自动为二进制、八进制、十六进制数添加前缀符来标识，如&quot;&#123;:#b&#125;&quot;.format(80)，输出为0b1010000</span></span><br><span class="line"></span><br><span class="line">  二进制为<span class="number">0</span>b，八进制为<span class="number">0</span>o，十六进制为<span class="number">0</span>x</span><br><span class="line"></span><br><span class="line">* f-字符串/f-string&lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;（python是<span class="number">3.6</span>版本以下适用，format全版本都适用）&lt;/font&gt;</span><br><span class="line"></span><br><span class="line">  f字符串     变量直接输到花括号里</span><br><span class="line"></span><br><span class="line">  如：print(f<span class="string">&quot;&#123;3.14:&#123;&#x27;+&#x27;&#125;&#123;&#x27;^&#x27;&#125;&#123;10&#125;.&#123;3&#125;&#123;&#x27;g&#x27;&#125;&#125;&quot;</span>)，输出结果和上面高端玩法结果一样，也可以分别把这些格式符号赋值给变量，再在花括号里填相应的变量名实现</span><br><span class="line"></span><br><span class="line"><span class="comment">### 序列</span></span><br><span class="line"></span><br><span class="line">* 可变序列：列表（用[]）</span><br><span class="line"></span><br><span class="line">  不可变序列：元组（用()）、字符串</span><br><span class="line"></span><br><span class="line">* +和*参考上面学习的</span><br><span class="line"></span><br><span class="line">* 每一个对象的三个基本属性：唯一标志（不可被修改和重复）（即id值）（我的理解是地址）、类型、值</span><br><span class="line"></span><br><span class="line">* is和is <span class="keyword">not</span>运算符用来判断id值是否一样</span><br><span class="line"></span><br><span class="line">* <span class="keyword">in</span>和<span class="keyword">not</span> <span class="keyword">in</span>运算来判断包含问题</span><br><span class="line"></span><br><span class="line">  如：<span class="string">&quot;ABC&quot;</span> <span class="keyword">in</span> <span class="string">&quot;ABCDE&quot;</span>，返回<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">* del语句删除一个或多个指定的对象</span><br><span class="line"></span><br><span class="line">  如：del x,y(逗号与y之间含不含空格无所谓)</span><br><span class="line"></span><br><span class="line">  也可以用来删除可变序列中指定元素，del x[<span class="number">1</span><span class="symbol">:</span><span class="number">4</span>],用切片则是y[<span class="number">1</span><span class="symbol">:</span><span class="number">4</span>] = []</span><br><span class="line"></span><br><span class="line">  切片不能做的：del[ : <span class="symbol">:</span><span class="number">2</span>]，以步幅为二从头删除元素</span><br><span class="line"></span><br><span class="line">  x.clear()表示清空x里面的内容，用del则为del y[ : ]</span><br><span class="line"></span><br><span class="line">* 列表、元组和字符串相互转换</span><br><span class="line"></span><br><span class="line">  list(字符串/元组)转换为列表</span><br><span class="line"></span><br><span class="line">  tuple(字符串/列表)转换成元组</span><br><span class="line"></span><br><span class="line">  str(元组/列表)转换成字符串（大致就是在外围加上引号）</span><br><span class="line"></span><br><span class="line">* min()和max()</span><br><span class="line"></span><br><span class="line">  min(iterable, \*[,key,default])      min(arg1, arg2,*args[, key])</span><br><span class="line"></span><br><span class="line">  如<span class="symbol">:min</span>(变量名)返回其中最小的元素，也可以直接输入元素</span><br><span class="line"></span><br><span class="line">  如果传入空字符串就会报错，但可以设置default内容，如：min(s, default=<span class="string">&quot;屁，啥都没有，怎么找到最小? &quot;</span>)</span><br><span class="line"></span><br><span class="line">  max(iterable, \*[,key,default])       max(arg1, arg2,*args[, key])</span><br><span class="line"></span><br><span class="line">* len()&amp;sum()</span><br><span class="line"></span><br><span class="line">  len()有最大的阈值，<span class="number">2</span>^<span class="number">63</span><span class="number">-1</span></span><br><span class="line"></span><br><span class="line">  sum(变量名)，有个参数设置起始值，sum(s,start=<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">* sorted()&amp;reversed()</span><br><span class="line"></span><br><span class="line">  sorted(s)返回一个全新的从小到大排列的列表，原来的不会受影响，但如果用s.sort()就会对s中的元素造成影响</span><br><span class="line"></span><br><span class="line">  sorted(s,reverse=<span class="title class_">True</span>)，排序后翻转</span><br><span class="line"></span><br><span class="line">  输入sorted(t)，输出[<span class="string">&#x27;Apple&#x27;</span>,<span class="string">&#x27;Banana&#x27;</span>,<span class="string">&#x27;Book&#x27;</span>,<span class="string">&#x27;FishC&#x27;</span>,<span class="string">&#x27;Pen&#x27;</span>]</span><br><span class="line">  输入sorted(t, key=len)，输出[<span class="string">&#x27;Pen&#x27;</span>,<span class="string">&#x27;Book&#x27;</span>,<span class="string">&#x27;FishC&#x27;</span>,<span class="string">&#x27;Apple&#x27;</span>,<span class="string">&#x27;Banana&#x27;</span>]</span><br><span class="line"></span><br><span class="line">  输入sorted((<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">6</span> ))，输出为[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">8</span>]</span><br><span class="line"></span><br><span class="line">  t.sort(key=len)也可以用key</span><br><span class="line"></span><br><span class="line">  reversed(s),返回的参数的反向迭代器（目前可理解为可迭代对象），但用这个的话会返回一串奇奇怪怪的内容，用list在转换一下就行</span><br><span class="line"></span><br><span class="line"><span class="comment">## 20220428</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 序列</span></span><br><span class="line"></span><br><span class="line">* |             函数             |                             作用                             |                             例子                             |</span><br><span class="line">  | <span class="symbol">:--------------------------</span>: | <span class="symbol">:----------------------------------------------------------</span>: | <span class="symbol">:----------------------------------------------------------</span>: |</span><br><span class="line">  |         all(变量名)          |            判断可迭代对象中是否所有元素的值都为真            |                                                              |</span><br><span class="line">  |         any(变量名)          |          判断可迭代对象中是否存在某个元素的值都为真          |                                                              |</span><br><span class="line">  | enumerate（变量名,开始数字） | 返回一个枚举对象.将可迭代对象中的每个元素及从<span class="number">0</span>开始的序号共同构成一个二元组的列表。 | seasons = [<span class="string">&quot;Spring&quot;</span>,<span class="string">&quot;Summer&quot;</span>,<span class="string">&quot;Fall&quot;</span>,<span class="string">&quot;Winter&quot;</span>] print(list(enumerate(seasons,<span class="number">1</span>))) |</span><br><span class="line">  |            zip()             | 创建一个聚合多个可迭代对象的迭代器。将作为参数传入的每个可迭代对象的每个元素依次组合成元组，即第i个元组包含来自每个参数的第i个元素。 | x = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]    y = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]   z = [<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]  zipped = zip(x,y,z)   list(zipped)   输出[(<span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>), (<span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>), (<span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>)]，（如果元素长度不匹配，以最短的那个做匹配） |</span><br><span class="line">  |     map(函数,可迭代对象)     | 根据提供的函数对指定的可迭代对象的每个元素进行运算，并将返回运算结果的迭代器。 | （函数ord就会返回元素的<span class="title class_">ASCLL</span>值，可迭代对象有字符串）（如果元素长度不匹配，以最短的那个做匹配） mapped = map(pow, [<span class="number">2</span>,<span class="number">3</span>,<span class="number">10</span>],[<span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>])     list(mapped) ，输出[<span class="number">32</span>, <span class="number">9</span>, <span class="number">1000</span>] |</span><br><span class="line">  |           filter()           | 根据提供的函数对指定的可迭代对象的每个元素进行运算，并将&lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;运算结果为真的元素&lt;/font&gt;，以迭代器的形式返回。(过滤器) |    list(filter(str.islower,<span class="string">&quot;FishC&quot;</span>))，输出[<span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;h&#x27;</span>]    |</span><br><span class="line"></span><br><span class="line">* 补充：</span><br><span class="line"></span><br><span class="line">  <span class="symbol">zip:</span>如果想按长的那个进行匹配，就需要用到itertools.zip_longest函数，需要先引用itertools模块</span><br><span class="line"></span><br><span class="line">  如：zipped = itertools.zip_longest(x,y,z)这样写，空的就写<span class="title class_">None</span></span><br><span class="line"></span><br><span class="line">* |                            迭代器                            |                      可迭代对象                       |</span><br><span class="line">  | <span class="symbol">:----------------------------------------------------------</span>: | <span class="symbol">:---------------------------------------------------</span>: |</span><br><span class="line">  |                     肯定是一个可迭代对象                     |                    不一定是迭代器                     |</span><br><span class="line">  |                    不可重复使用（一次性）                    |                      可重复使用                       |</span><br><span class="line">  |                      一些函数的返回结果                      |           列表、元组、字符串都是可迭代对象            |</span><br><span class="line">  | next(变量名，字符串)用来依次提取迭代器，当迭代器为空，就返回字符串内容 | 通过变量名 = iter(变量名)，实现可迭代对象转变成迭代器 |</span><br><span class="line"></span><br><span class="line"><span class="comment">### 字典</span></span><br><span class="line"></span><br><span class="line">* 由&#123;键<span class="symbol">:</span>值&#125;组成</span><br><span class="line"></span><br><span class="line">* 通过指定一个不存在于字典中的键，就可以创建一个新的键值对</span><br><span class="line"></span><br><span class="line">* 创建字典</span><br><span class="line"></span><br><span class="line">  * 直接使用&#123;&#125;+<span class="symbol">:</span>的方式将映射关系给套牢，键值都要加引号</span><br><span class="line">  * 使用dict()函数，如：b= dict(吕布=<span class="string">&quot;口口布&quot;</span>，……)，键上不加引号</span><br><span class="line">  * 使用列表作为参数，如c = dict([(<span class="string">&#x27;吕布&#x27;</span>,<span class="string">&#x27;口口布&#x27;</span>),(<span class="string">&quot;关羽&quot;</span>,<span class="string">&quot;关习习&quot;</span>)]) </span><br><span class="line">  * 就是将第一种方法的变量名传给dict函数</span><br><span class="line">  * 第二第三种结合 e = dict(&#123;<span class="string">&quot;吕布&quot;</span><span class="symbol">:<span class="string">&quot;口口布&quot;</span></span>, <span class="string">&quot;关羽&quot;</span><span class="symbol">:<span class="string">&quot;关习习&quot;</span></span>&#125;,刘备=<span class="string">&quot;刘Baby&quot;</span>)</span><br><span class="line">  * 用上zip函数 f = dict(zip([<span class="string">&quot;吕布&quot;</span>,<span class="string">&quot;关羽&quot;</span>,<span class="string">&quot;刘备&quot;</span>],[<span class="string">&quot;口口布&quot;</span>,<span class="string">&quot;关习习&quot;</span>,<span class="string">&quot;刘Baby&quot;</span>]))</span><br><span class="line"></span><br><span class="line">* 增、删、改、查</span><br><span class="line"></span><br><span class="line">  |            函数             |                             作用                             |                        示例                        |</span><br><span class="line">  | <span class="symbol">:-------------------------</span>: | <span class="symbol">:----------------------------------------------------------</span>: | <span class="symbol">:------------------------------------------------</span>: |</span><br><span class="line">  | fromkeys(iterable[,values]) | 使用iterable指定的可迭代对象来创建一个新的字典，并将所有的值初始化为values参数指定的值，创建所有值都相等的键值对 |           d = dict.fromkeys(<span class="string">&quot;Fish&quot;</span>,<span class="number">250</span>)            |</span><br><span class="line">  |     pop(key[,default])      | 删除键和对应的值，若不存在就抛出异常或者输出default的字符串  |                     d.pop(<span class="string">&#x27;s&#x27;</span>)                     |</span><br><span class="line">  |         d.popitem()         |  <span class="number">3.7</span>以后删除最后一个进入的键值对。<span class="number">3.7</span>以前随机删除一个键值对  |                    d.popitem()                     |</span><br><span class="line">  |             del             |           用来删除一个指定的字典元素，或者删除字典           |                 del d[<span class="string">&#x27;i&#x27;</span>]或del d                  |</span><br><span class="line">  |           clear()           |                       清空字典中的内容                       |                     d.clear()                      |</span><br><span class="line">  |    d[键名] = 替换成的值     |       对指定键对的值进行修改，若不存在就增加新的键值对       |                    d[<span class="string">&#x27;F&#x27;</span>] = <span class="number">70</span>                     |</span><br><span class="line">  |      d.update([other])      | 同时传入多个键值对、直接传入另一个字典或一个包含键值对的可迭代对象 | d.update(&#123;<span class="string">&#x27;i&#x27;</span><span class="symbol">:</span><span class="number">105</span>,<span class="string">&#x27;h&#x27;</span><span class="symbol">:</span><span class="number">104</span>&#125;)  d.update(F=<span class="string">&#x27;70&#x27;</span>,C=<span class="number">67</span>) |</span><br><span class="line">  |           d[<span class="string">&#x27;C&#x27;</span>]            |                     给一个键，返回它的值                     |                                                    |</span><br><span class="line">  |     get(key[,default])      |     和上面一个作用一样，只是这个找不到会返回default内容      |                                                    |</span><br><span class="line">  |  setdefault(key[,default])  | 查找一个键是否存在于字典中，如果在则返回对应的值，如果不在则给他一个指定的值 |              d.setdefault(<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;code&#x27;</span>)              |</span><br><span class="line">  |       变量名.items()        |                  获取字典的键值对的视图对象                  |                                                    |</span><br><span class="line">  |        变量名.keys()        |                获取字典的键值对的键的视图对象                |                                                    |</span><br><span class="line">  |       变量名.values()       |                获取字典的键值对的值的视图对象                |                                                    |</span><br><span class="line"></span><br><span class="line">* 视图对象：视图对象即字典的动态视图，这就意味着当字典的内容发生改变的时候，视图对象的内容也会相应地跟着改变。</span><br><span class="line"></span><br><span class="line">* 浅拷贝copy，用法和序列一样</span><br><span class="line"></span><br><span class="line">* 对字典的常用函数</span><br><span class="line"></span><br><span class="line">  |    函数     |                            作用                            |</span><br><span class="line">  | <span class="symbol">:---------</span>: | <span class="symbol">:--------------------------------------------------------</span>: |</span><br><span class="line">  | len(变量名) |                      返回键值对的数量                      |</span><br><span class="line">  | <span class="keyword">in</span>和<span class="keyword">not</span> <span class="keyword">in</span>  |                   判断键值对是否在字典中                   |</span><br><span class="line">  |   list()    | 生成列表,括号里可以是d、是d.values()或是reversed(d.values) |</span><br><span class="line">  |   iter()    |                  生成迭代器，配合next使用                  |</span><br><span class="line">  |  reverse()  |     <span class="number">3.8</span>版本之后可用，生成逆向序列,括号里可以是d.values     |</span><br><span class="line"></span><br><span class="line">* 嵌套，多个字典嵌套</span><br><span class="line"></span><br><span class="line">  ```python</span><br><span class="line">  g = &#123;<span class="string">&quot;吕布&quot;</span>: &#123;<span class="string">&quot;语文&quot;</span>: <span class="number">60</span>, <span class="string">&quot;数学&quot;</span>: <span class="number">70</span>, <span class="string">&quot;英语&quot;</span>: <span class="number">80</span>&#125;, <span class="string">&quot;关羽&quot;</span>: &#123;<span class="string">&quot;语文&quot;</span>: <span class="number">80</span>, <span class="string">&quot;数学&quot;</span>: <span class="number">90</span>, <span class="string">&quot;英语&quot;</span>: <span class="number">70</span>&#125;&#125;</span><br><span class="line">  g[<span class="string">&#x27;吕布&#x27;</span>][<span class="string">&#x27;数学&#x27;</span>]  </span><br><span class="line">  </span><br><span class="line">  g = &#123;<span class="string">&quot;吕布&quot;</span>: [<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>], <span class="string">&quot;关羽&quot;</span><span class="symbol">:</span>[<span class="number">80</span>,<span class="number">90</span>,<span class="number">70</span>]&#125;</span><br><span class="line">  g[<span class="string">&#x27;吕布&#x27;</span>][<span class="number">1</span>]  </span><br></pre></td></tr></table></figure></code></pre></li></ul></li><li><p>字典推导式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;<span class="string">&#x27;F&#x27;</span>:<span class="number">70</span>,<span class="string">&#x27;i&#x27;</span>=<span class="number">105</span>,<span class="string">&#x27;s&#x27;</span>:<span class="number">115</span>,<span class="string">&#x27;h&#x27;</span>=<span class="number">104</span>,<span class="string">&#x27;c&#x27;</span>=<span class="number">67</span>&#125;</span><br><span class="line">b = &#123;v:k <span class="keyword">for</span> k,v <span class="keyword">in</span> d.items()&#125; <span class="comment">#将键值互换</span></span><br><span class="line">b = &#123;v:k <span class="keyword">for</span> k,v <span class="keyword">in</span> d.items() <span class="keyword">if</span> v&gt;<span class="number">100</span>&#125; </span><br></pre></td></tr></table></figure></li></ul><h3 id="集合">集合</h3><ul><li><p>集合中所有元素都是独一无二的，并且也是无序的</p></li><li><p>创造集合</p><ul><li>{“FishC”,“Python”}就是一个集合</li><li>集合推导式：{s for s in “FishC”}</li><li>使用类型构造器：set(“FishC”)</li></ul></li><li><p>不能使用下标索引来寻找元素</p></li><li><p>可以使用in和not in</p></li><li><p>访问集合中的元素，可以使用迭代的方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> s:</span><br><span class="line">    <span class="built_in">print</span>(each)</span><br></pre></td></tr></table></figure></li><li><p>唯一性，可以用来实现去重</p><p>set([1,1,2,3,5]),输出(1,1,2,3,5)</p><p>判断是否有重复元素：len(s) == len(set(s))</p></li><li><p>浅拷贝 copy</p></li><li><p>看两个是否相关，用isdisjoint</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="built_in">set</span>(<span class="string">&#x27;FishC&#x27;</span>) </span><br><span class="line">s.isdisjoint(<span class="built_in">set</span>(<span class="string">&#x27;python&#x27;</span>)) <span class="comment"># 返回False</span></span><br><span class="line">s.isdisjoint(<span class="built_in">set</span>(<span class="string">&#x27;Java&#x27;</span>)) <span class="comment">#返回True</span></span><br><span class="line">s.isdisjoint(<span class="string">&#x27;python&#x27;</span>) <span class="comment">#也可以是字符串，只要是可迭代对象就行</span></span><br></pre></td></tr></table></figure></li><li><p>判断一个集合是否是另一个集合的子集：s.issubset(“<a href="http://FishC.com.cn">FishC.com.cn</a>”),返回true</p></li><li><p>判断一个集合是否是另一个集合的超集：s.issuperset(“Fish”),返回true</p></li><li><p>超集：对于两个集合A、B ,如果集合B中任意个元素都是集合A中的元素，我们就说这两个集合有包含关系，称集合A为集合B的超集</p></li><li><p>s.union({1,2,3},“Python”)，求并集，支持多参数</p></li><li><p>s.intersection(“Fish”，“Flash”)，求交集，支持多参数</p></li><li><p>s.difference(“Fish”)，求差集（属于A但不属于B的），支持多参数</p></li><li><p>s.symmetric_difference(“Python”)，求对称差集(出去A和B中所有非共有的元素),<font color='red'>不支持多参数</font></p></li><li><p>总结上述内容</p><table><thead><tr><th style="text-align:center">关系</th><th style="text-align:center">函数</th><th style="text-align:center">符号</th><th style="text-align:center">是否支持多参数</th><th style="text-align:center">示例</th></tr></thead><tbody><tr><td style="text-align:center">子集</td><td style="text-align:center">issubset</td><td style="text-align:center">&lt;=(子集)   &lt;(真子集)</td><td style="text-align:center">否</td><td style="text-align:center">s.issubset(“<a href="http://FishC.com.cn">FishC.com.cn</a>”)<br />s &lt; set(“FishC”)</td></tr><tr><td style="text-align:center">超集</td><td style="text-align:center">issuperset</td><td style="text-align:center">&gt;=和&gt;(同上)</td><td style="text-align:center">否</td><td style="text-align:center">s.issuperset(“Fish”)<br />s &gt; set(“FishC”)</td></tr><tr><td style="text-align:center">并集</td><td style="text-align:center">union</td><td style="text-align:center">|</td><td style="text-align:center">是</td><td style="text-align:center">s.union({1,2,3},“Python”)<br />s | {1,2,3} | set(“python”)</td></tr><tr><td style="text-align:center">交集</td><td style="text-align:center">intersection</td><td style="text-align:center">&amp;</td><td style="text-align:center">是</td><td style="text-align:center">s.intersection(“Fish”，“Flash”)<br />s &amp; set(“Php”) &amp; set(“Python”)</td></tr><tr><td style="text-align:center">差集</td><td style="text-align:center">different</td><td style="text-align:center">-</td><td style="text-align:center">是</td><td style="text-align:center">s.difference(“Fish”)<br />s - set(“Php”) - set(“Python”)</td></tr><tr><td style="text-align:center">对称差集</td><td style="text-align:center">symmetric_differe</td><td style="text-align:center">^</td><td style="text-align:center">否</td><td style="text-align:center">s.symmetric_difference(“Python”)<br />s ^ set(“Python”)</td></tr></tbody></table><p><font color='red'>使用符号运算符，符号两边都要是集合类型的数据，方法的话是可迭代对象就行</font></p></li><li><p>集合区分</p><table><thead><tr><th style="text-align:center">函数</th><th style="text-align:center">作用</th><th style="text-align:center">例子</th></tr></thead><tbody><tr><td style="text-align:center">set()</td><td style="text-align:center">可变集合</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">frozenset()</td><td style="text-align:center">不可变集合</td><td style="text-align:center">t = frozenset(“FishC”)</td></tr></tbody></table><p>上边学的函数set()和frozenset()都可用</p></li><li><p>只能set()使用的函数</p><table><thead><tr><th style="text-align:center">函数</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">变量名.update(*others)</td><td style="text-align:center">增加一个元素，无序的，唯一性的</td></tr><tr><td style="text-align:center">变量名.intersection_ update( *others )</td><td style="text-align:center">求交集，会更改变量名所指的集合</td></tr><tr><td style="text-align:center">变量名.difference_ update(*others )</td><td style="text-align:center">求差集，会更改变量名所指的集合</td></tr><tr><td style="text-align:center">变量名.symmetric_ difference_ update(others)</td><td style="text-align:center">求对称差集，会更改变量名所指的集合</td></tr><tr><td style="text-align:center">变量名.add(other)</td><td style="text-align:center">传入字符串是将整个字符串传入集合,只能单个传入</td></tr><tr><td style="text-align:center">remove(elem)</td><td style="text-align:center">删除元素，若指定元素不存在，remove会抛出异常</td></tr><tr><td style="text-align:center">discard(elem)</td><td style="text-align:center">删除元素，若指定元素不存在，discard会静默处理</td></tr><tr><td style="text-align:center">pop()</td><td style="text-align:center">随机从集合中弹出并删除一个元素</td></tr><tr><td style="text-align:center">clear()</td><td style="text-align:center">直接将集合清空</td></tr></tbody></table><p><font color='green'>小技巧</font>:<font color='red'>如果others含s就表示支持多参数，other就只支持一个参数</font></p></li><li><p>可哈希</p><table><thead><tr><th style="text-align:center">函数</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">hash(object)</td><td style="text-align:center">获取object的哈希值</td></tr></tbody></table></li><li><p>对整数求哈希值，那哈希值就是他本身</p><p>如果两个数的值相等（如1和1.0），那哈希值也相等</p></li><li><p>不可变的，可以求哈希值</p><p>可变的，不可以求哈希值</p></li><li><p>可哈希的才能作为字典的键和集合的元素</p></li><li><p><font color='red'>集合是可变的，不能嵌套</font></p></li><li><p>使用frozenset就可以用来嵌套</p></li></ul><h2 id="20220429">20220429</h2><h3 id="函数">函数</h3><ul><li><p>创建和调用函数</p><p>创建（形参和实参）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc</span>(): <span class="comment">#函数名</span></span><br><span class="line">    <span class="keyword">pass</span> <span class="comment">#代码块，执行内容</span></span><br><span class="line">         <span class="comment">#pass是个空语句，一般作为占位符</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc</span>(<span class="params">name,time</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(time):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;I love <span class="subst">&#123;name&#125;</span>.&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>函数的返回值有retrun 返回</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">div</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="keyword">if</span> y == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;除数不能为零&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> x/y</span><br><span class="line"><span class="built_in">print</span>(div(<span class="number">4</span>,<span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(div(<span class="number">4</span>,<span class="number">0</span>))</span><br></pre></td></tr></table></figure><p>如果没有return语句，程序会自动执行完成后返回none</p></li></ul><h4 id="参数">参数</h4><ul><li><p>定义函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc</span>(<span class="params">s,vt,o</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join((o,vt,s))</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">参数类型</th><th style="text-align:center">我的理解</th><th style="text-align:center">例子</th></tr></thead><tbody><tr><td style="text-align:center">位置参数</td><td style="text-align:center">按定义函数时的循序来输入函数</td><td style="text-align:center">myfunc(“a”,“b”,“c”)</td></tr><tr><td style="text-align:center">关键词参数</td><td style="text-align:center">按使用函数时用关键词作为引导传入函数</td><td style="text-align:center">myfunc(o=“a”,vt=“b”,s=“c”)</td></tr><tr><td style="text-align:center">混用以上两个</td><td style="text-align:center">位置参数必须在关键词参数之前</td><td style="text-align:center">myfunc(“a”, “c”, o=‘b’)<br/>输出bca</td></tr></tbody></table></li><li><p>默认参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc</span>(<span class="params">s,vt,o=<span class="string">&quot;asd&quot;</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join((o,vt,s))</span><br><span class="line">myfunc(<span class="string">&quot;xzc&quot;</span>，<span class="string">&quot;zxc&quot;</span>)<span class="comment">#如果第三个参数不传递的话，就用默认参数</span></span><br><span class="line">myfunc(<span class="string">&quot;xzc&quot;</span>，<span class="string">&quot;zxc&quot;</span>，<span class="string">&quot;zxcac&quot;</span>)<span class="comment">#如果第三个参数传递的话，就用会覆盖掉默认参数，使用传入的参数</span></span><br></pre></td></tr></table></figure><p>使用默认参数的时候，最好将其摆在最后，不然会报错</p></li><li><p><font color='green'>冷门知识</font>：</p><ul><li><p><font color='red'>我们可以使用help()函数来查看这个函数文档</font></p></li><li><p>我们用help()函数查看会看到/，斜杠左侧的参数必须传递位置参数，而不能是关键字参数，斜杠右侧无所谓</p></li><li><p>如果在函数参数之间添加了*就要求*号右侧的参数传递时要是关键词参数，而*号左侧无要求，都可以</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">abc</span>(<span class="params">a,*,b,c</span>):</span><br><span class="line">    <span class="built_in">print</span>(a,b,c)</span><br><span class="line"><span class="built_in">print</span>(abc(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>))<span class="comment">#会报错</span></span><br><span class="line"><span class="built_in">print</span>(abc(<span class="number">1</span>,b=<span class="number">2</span>,c=<span class="number">3</span>))<span class="comment">#不会报错</span></span><br><span class="line"><span class="built_in">print</span>(abc(a=<span class="number">1</span>,b=<span class="number">2</span>,c=<span class="number">3</span>))<span class="comment">#不会报错</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>收集参数：对输入的参数没有数据限制，如print()函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc</span>(<span class="params">*args</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;有&#123;&#125;个参数。&quot;</span>.<span class="built_in">format</span>(<span class="built_in">len</span>(args)))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;第2个参数是: &#123;&#125;&quot;</span> .<span class="built_in">format</span>(args[<span class="number">1</span>]))</span><br><span class="line">myfunc(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">有5个参数</span></span><br><span class="line"><span class="string">第2个参数是:2</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>收集参数的实现通过星号实现元组的打包功能，返回多个值也是通过元组来实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span><br><span class="line">myfunc()</span><br><span class="line"><span class="comment">#返回(1,2,3)</span></span><br></pre></td></tr></table></figure><p>如果在收集参数后面还需要指定其他参数，那就用关键词参数来指定</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">det myfunc(targs,a,b):</span><br><span class="line"><span class="built_in">print</span>(args,a,b)</span><br><span class="line">myfunc(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,a=<span class="number">4</span>,b=<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>*号是匿名的收集参数</p><p>收集参数也可以将参数打包为字典，做法就是通过两个字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc</span> (**kwargs):</span><br><span class="line">    <span class="built_in">print</span> (kwargs)</span><br><span class="line">myfunc(a=<span class="number">1</span>, b=<span class="number">2</span>, C=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#更复杂的</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc</span>(<span class="params">a, *b, **c</span>):</span><br><span class="line">    <span class="built_in">print</span>(a, b, c)</span><br><span class="line">myfunc(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, x=<span class="number">4</span>, y=<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>format函数就是既用*，又用**的函数</p></li><li><p>解包参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">args = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc</span>(<span class="params">a,b,c,d</span>):</span><br><span class="line">    <span class="built_in">print</span>(a,b,c,d)</span><br><span class="line"><span class="comment">#直接将args传入会被当成一个参数，加上引号就会对元素进行解包，并依次赋值给四个元素</span></span><br><span class="line">myfunc(*args)</span><br></pre></td></tr></table></figure><p>两个*对应的是关键词参数(函数跟着上面一起)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kwargs = &#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>,<span class="string">&#x27;b&#x27;</span>:<span class="number">2</span>,<span class="string">&#x27;c&#x27;</span>:<span class="number">3</span>,<span class="string">&#x27;d&#x27;</span>:<span class="number">4</span>&#125;</span><br><span class="line">myfunc(**kwargs)</span><br></pre></td></tr></table></figure></li><li><p>作用域</p><p>变量定义在函数内，则是局部作用域，局部变量</p><p>变量定义在有任何函数的外部，就是全局定义域，全局变量</p><p>在局部变量的覆盖范围内，会暂时覆盖全局变量的值，但在该函数外依旧是全局变量的值，可以通过id看书这两个是不一样的</p></li><li><p>global语句</p><p>在函数内部写上（global 全局变量名），此后在函数内部对该全局变量修改，在函数外的全局变量也会受到改变（但不推荐使用）</p></li><li><p>嵌套函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">funA</span>():</span><br><span class="line">    x = <span class="number">520</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">funB</span>():</span><br><span class="line">        x = <span class="number">880</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;In funB, x =&quot;</span>, x)</span><br><span class="line">    funB()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;In funA, x =&quot;</span>, x)</span><br><span class="line"><span class="comment"># 以上是函数定义部分，以下是实现部分</span></span><br><span class="line">funA()</span><br></pre></td></tr></table></figure></li><li><p>nonlocal语句，在内部函数去修改外部函数的变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">funA</span>():</span><br><span class="line">    x = <span class="number">520</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">funB</span>():</span><br><span class="line">        <span class="keyword">nonlocal</span> x</span><br><span class="line">        x = <span class="number">880</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;In funB, x =&quot;</span>, x)</span><br><span class="line">    funB()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;In funA, x =&quot;</span>, x)</span><br><span class="line"><span class="comment"># 以上是函数定义部分，以下是实现部分</span></span><br><span class="line">funA()</span><br></pre></td></tr></table></figure><p>如果后面的功能需要用到内部函数，同时又对外部函数的数值有修改的话，每次对外部参数进行修改时是在上一此的基础上进行的，换句话说就是有记忆功能，记住每一次修改后的数值，实时修改（以上均为我的个人理解后描述的）</p></li><li><p>LEGB规则</p><p>L是Local，表示局部作用域</p><p>E是Enclosed，表示嵌套函数的外层函数的作用域</p><p>G是Global，表示全局作用域</p><p>B是Build-In，表示内置作用域（不大理解是啥）</p></li><li><p>闭包</p><p>函数只用定义和调用的时候会用到小括号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">funA</span>():</span><br><span class="line">    x = <span class="number">880</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">funB</span>():</span><br><span class="line">        <span class="built_in">print</span>( x)</span><br><span class="line">    <span class="keyword">return</span> funB</span><br><span class="line"><span class="comment"># 以上是函数定义部分，以下是实现部分,调用函数B</span></span><br><span class="line">funA()()</span><br><span class="line"></span><br><span class="line">funny = funA()</span><br><span class="line">funny() <span class="comment">#LEGB中的E</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">power</span>(<span class="params">exp</span>):</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exp_</span> of(base):</span><br><span class="line"><span class="keyword">return</span> base ** exp</span><br><span class="line"><span class="keyword">return</span> exp_ of</span><br><span class="line"><span class="comment">#以上是函数部分，以下是功能实现</span></span><br><span class="line">square = power(<span class="number">2</span>)</span><br><span class="line">cube = power(<span class="number">3</span>)</span><br><span class="line">square(<span class="number">2</span>)<span class="comment"># 输出4</span></span><br><span class="line">square(<span class="number">5</span>)<span class="comment">#输出25</span></span><br><span class="line">cube(<span class="number">2</span>)<span class="comment">#输出8</span></span><br><span class="line">cube(<span class="number">5</span>)<span class="comment">#输出125</span></span><br></pre></td></tr></table></figure></li><li><p>闭包，就是调用nonlocal语句来实现对外层参数更改，可以用在游戏中位置的编写（设置范围限制）。</p><p>利用嵌套函数的外层作用域具有记忆能力这个特性让数据保存在外层函数的参数或者变量中。</p><p>将内层函数作为返回值给返回</p></li></ul><h2 id="20220430">20220430</h2><h3 id="函数——装饰器">函数——装饰器</h3><ul><li><p>调用函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc</span>():</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;正在调用myfunc...&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">report</span>(<span class="params">func</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;主人，我要开始调用函数了...&quot;</span>)</span><br><span class="line">func()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;主人，我调用完函数啦，快夸夸我^o^&quot;</span>)</span><br><span class="line"><span class="comment">#以上是函数，以下是使用</span></span><br><span class="line">report(myfunc)</span><br></pre></td></tr></table></figure></li><li><p>计算函数调用时间的函数，需要先引用时间模块 import time</p><p>记录时间戳，变量名 = time.time()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">time_master</span>(<span class="params">func</span>):</span><br><span class="line"><span class="built_in">print</span>( <span class="string">&quot;开始运行程序...&quot;</span>)</span><br><span class="line">start = time. time()</span><br><span class="line">func()</span><br><span class="line">stop = time. time()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;结束程序运行...&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;一共耗费了<span class="subst">&#123;(stop-start):<span class="number">.2</span>f&#125;</span> 秒。&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc</span>():</span><br><span class="line">time.sleep(<span class="number">2</span>) <span class="comment">#让函数停止两秒</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello FishC.&quot;</span>) </span><br><span class="line"><span class="comment">#以上是函数，以下是使用</span></span><br><span class="line">time_master(myfunc)</span><br></pre></td></tr></table></figure></li><li><p>函数装饰器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">time_master</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">call_func</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;开始运行程序...&quot;</span>)</span><br><span class="line">        start = time.time()</span><br><span class="line">        func()</span><br><span class="line">        stop = time.time()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;结束程序运行...&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;一共耗费了 <span class="subst">&#123;(stop - start):<span class="number">.2</span>f&#125;</span> 秒。&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> call_func <span class="comment">#这上边是一个闭包</span></span><br><span class="line"><span class="meta">@time_master</span><span class="comment">#这个是装饰器的一个语法糖，意思是在调用myfunc时并不是真正去调用myfunc，而是把myfunc装到上面那个装饰器里，去调用这个装饰器</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc</span>():</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;I love FishC.&quot;</span>)</span><br><span class="line"><span class="comment">#以上是函数，以下是使用</span></span><br><span class="line">myfunc()</span><br><span class="line"><span class="comment">#对myfunc使用myfunc._name_查看函数名（下面会提到），会发现是call_func</span></span><br></pre></td></tr></table></figure><p>调用多个装饰器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">        x = func()</span><br><span class="line">        <span class="keyword">return</span> x + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cube</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">        x = func()</span><br><span class="line">        <span class="keyword">return</span> x * x * x</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">square</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">        x = func()</span><br><span class="line">        <span class="keyword">return</span> x * x</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"><span class="meta">@add</span><span class="comment">#第三个执行这个</span></span><br><span class="line"><span class="meta">@cube</span><span class="comment">#第二个执行这个</span></span><br><span class="line"><span class="meta">@square</span><span class="comment">#第一个执行这个</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line"><span class="comment">#以上是函数，以下是使用</span></span><br><span class="line"><span class="built_in">print</span>(test())</span><br></pre></td></tr></table></figure><p>给装饰器传递参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">logger</span>(<span class="params">msg</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">time_master</span>(<span class="params">func</span>):</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">call_func</span>():</span><br><span class="line">            start = time.time()</span><br><span class="line">            func()</span><br><span class="line">            stop = time.time()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[<span class="subst">&#123;msg&#125;</span>]一共耗费了<span class="subst">&#123;(stop-start):<span class="number">.2</span>f&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> call_func</span><br><span class="line">    <span class="keyword">return</span> time_master</span><br><span class="line"></span><br><span class="line"><span class="meta">@logger(<span class="params">msg=<span class="string">&quot;A&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">funA</span>():</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;正在调用funA...&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@logger(<span class="params">msg=<span class="string">&quot;B&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">funB</span>():</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;正在调用funB...&quot;</span>)</span><br><span class="line"><span class="comment">#以上是函数，以下是使用</span></span><br><span class="line">funA()</span><br><span class="line">funB()</span><br></pre></td></tr></table></figure><p>下面代码是上面代码不用语法糖的写法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">logger</span>(<span class="params">msg</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">time_master</span>(<span class="params">func</span>):</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">call_func</span>():</span><br><span class="line">            start = time.time()</span><br><span class="line">            func()</span><br><span class="line">            stop = time.time()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[<span class="subst">&#123;msg&#125;</span>]一共耗费了<span class="subst">&#123;(stop-start):<span class="number">.2</span>f&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> call_func</span><br><span class="line">    <span class="keyword">return</span> time_master</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">funA</span>():</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;正在调用funA...&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">funB</span>():</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;正在调用funB...&quot;</span>)</span><br><span class="line"><span class="comment">#以上是函数，以下是使用</span></span><br><span class="line">funA = logger(msg=<span class="string">&#x27;A&#x27;</span>)(funA)</span><br><span class="line">funB = logger(msg=<span class="string">&#x27;B&#x27;</span>)(funB)</span><br><span class="line"></span><br><span class="line">funA()</span><br><span class="line">funB()</span><br></pre></td></tr></table></figure></li></ul><h3 id="递归">递归</h3><ul><li><p><font color='red'>让递归结束，必须有个结束条件，并且每次调用都会向着这个结束条件去推进</font></p></li><li><p>求一个数的阶乘!</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 迭代</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">diedaijc</span>(<span class="params">n</span>):</span><br><span class="line">    result = n</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n):</span><br><span class="line">        result *= i</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"><span class="comment">#以上是函数，以下是使用</span></span><br><span class="line"><span class="built_in">print</span>(diedaijc(<span class="number">5</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#递归</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">diguijc</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> n * diguijc(n-<span class="number">1</span>)</span><br><span class="line"><span class="comment">#以上是函数，以下是使用</span></span><br><span class="line"><span class="built_in">print</span>(diguijc(<span class="number">5</span>))</span><br></pre></td></tr></table></figure></li><li><p>斐波那契数列逻辑懂得，换成python的写法</p></li><li><p>但递归会有效率问题</p></li></ul><h4 id="递归——汉诺塔">递归——汉诺塔</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hanoi</span>(<span class="params">n, x, y, z</span>):</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(x, <span class="string">&#x27;--&gt;&#x27;</span>, z)  <span class="comment"># 如果只有1层，直接将金片从x移动到z</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        hanoi(n-<span class="number">1</span>, x, z, y)  <span class="comment"># 将x上的n-1个金片移动到y</span></span><br><span class="line">        <span class="built_in">print</span>(x, <span class="string">&#x27;--&gt;&#x27;</span>, z)  <span class="comment"># 将最底下的金片从x移动到z</span></span><br><span class="line">        hanoi(n-<span class="number">1</span>, y, x, z)  <span class="comment"># 将y上的n-1个金片移动到z</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入汉诺塔的层数: &#x27;</span>))</span><br><span class="line">hanoi(n, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="函数文档和开发手册">函数文档和开发手册</h4><ul><li><p>使用help(函数)，就能查看函数的使用文档</p><p>会展示函数的原型、函数的功能介绍和参数的类型及作用</p><p><font color='red'>编写这些内容的方法：</font>用三个引号来编写函数文档（字符串），一定要放在最顶部，如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">exchange</span>(<span class="params">dollar, rate=<span class="number">6.32</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    功能:汇率转换，美元-&gt;人民币</span></span><br><span class="line"><span class="string">    参数:</span></span><br><span class="line"><span class="string">    - dollar 美元数量</span></span><br><span class="line"><span class="string">    - rate汇率,默认值是6.32 (2022-03-08 )</span></span><br><span class="line"><span class="string">    返回值:</span></span><br><span class="line"><span class="string">    - 人民币的数量</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> dollar * rate</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">help</span>(exchange))</span><br></pre></td></tr></table></figure></li><li><p>类型注释</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">times</span>(<span class="params">s: <span class="built_in">str</span>, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="keyword">return</span> s * n</span><br><span class="line"><span class="comment">#:str是个类型注释，是表示函数作者希望你输入这个类型</span></span><br><span class="line"><span class="comment">#-&gt; str表示返回值按希望应该是字符串类型</span></span><br><span class="line"><span class="built_in">print</span>(times(<span class="string">&quot;FishC&quot;</span>, <span class="number">5</span>))</span><br><span class="line"><span class="built_in">print</span>(times(<span class="number">5</span>, <span class="number">5</span>))<span class="comment">#但我们输入其他类型也是可以的</span></span><br></pre></td></tr></table></figure><p>内省</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">times</span>(<span class="params">s: <span class="built_in">dict</span>[<span class="built_in">str</span>, <span class="built_in">int</span>], n: <span class="built_in">int</span> = <span class="number">3</span></span>) -&gt; <span class="built_in">list</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(s.keys()) * n</span><br><span class="line"><span class="built_in">print</span>(times(&#123;<span class="string">&#x27;A&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;B&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;C&#x27;</span>: <span class="number">3</span>&#125;))</span><br><span class="line"><span class="comment">#内省：在程序运行的时候能够进行自我检测的一种机制</span></span><br><span class="line">times._name_<span class="comment">#查看函数名</span></span><br><span class="line">times._annotations_<span class="comment">#查看函数的类型注释</span></span><br><span class="line">exchange._doc_<span class="comment">#查看函数文档</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="高阶函数">高阶函数</h4><ul><li><p>概念：能接收函数对象的函数</p></li><li><p>很多高级函数在functools模块里</p><ul><li><p>reduce函数(第一个参数指定一个函数，且该函数必须是指定两个函数，第二个参数是可迭代对象)</p><p>作用是将可迭代对象依次传递到第一个参数指定的函数中，最终返回累计结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">x,y</span>):</span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line"><span class="keyword">import</span> functools</span><br><span class="line">functools.reduce(add,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line"><span class="comment">#相当于</span></span><br><span class="line">add(add(add(add(<span class="number">1</span>,<span class="number">2</span>),<span class="number">3</span>),<span class="number">4</span>),<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>计算十的阶乘</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">functools.reduce(<span class="keyword">lambda</span> x,y:x*y,<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>))</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="偏函数">偏函数</h4><ul><li><p>概念：对指定的函数进行二次包装，通常是将现有的函数部分参数预先绑定，从而得到新的函数。说白了就是将一个函数的参数拆分成多份传递进去</p></li><li><p>例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">square = functools.partial(<span class="built_in">pow</span>,exp = <span class="number">2</span>)</span><br><span class="line">square(<span class="number">3</span>)<span class="comment">#返回9</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="wraps装饰器">@wraps装饰器</h4><ul><li><p>@wraps装饰器来装饰装饰器</p></li><li><p>例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">time_master</span>(<span class="params">func</span>):</span><br><span class="line"><span class="meta">    @functools.wraps(<span class="params">func</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">call_func</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;开始运行程序...&quot;</span>)</span><br><span class="line">        start = time.time()</span><br><span class="line">        func()</span><br><span class="line">        stop = time.time()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;结束程序运行...&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;一共耗费了 <span class="subst">&#123;(stop - start):<span class="number">.2</span>f&#125;</span> 秒。&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> call_func</span><br><span class="line"><span class="meta">@time_maste</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc</span>():</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;I love FishC.&quot;</span>)</span><br><span class="line"><span class="comment">#以上是函数，以下是使用</span></span><br><span class="line">myfunc()<span class="comment">#此时myfunc._name_还是myfunc</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="永久存储">永久存储</h3><ul><li>示例（在交互模式下）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;FishC.txt&quot;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">f.write(<span class="string">&quot;I love Python.&quot;</span>)</span><br><span class="line"><span class="comment">#返回14，表示输入14个字符</span></span><br><span class="line">f.writelines([<span class="string">&quot;I love FishC.\n&quot;</span>,<span class="string">&quot;I love my wife.&quot;</span>])</span><br><span class="line">f.close()<span class="comment">#要关闭才能保存，不然是在缓存区</span></span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;FishC.txt&quot;</span>,<span class="string">&#x27;r+&#x27;</span>) </span><br><span class="line">f.readable()<span class="comment">#返回True，表示可读</span></span><br><span class="line">f.writable()<span class="comment">#返回True，表示可写</span></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> f:</span><br><span class="line">     <span class="built_in">print</span>(each) </span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;返回的内容</span></span><br><span class="line"><span class="string">I love Python.I love FishC.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">I love my wife.</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>在文件内部有一个文件指针，通过它来实现文件的读取，指到末尾后，如果想从头读，需要用函数来实现</li><li>把文件打开再关闭会实现文件被截断</li></ul><h2 id="20220501">20220501</h2><h3 id="永久储存">永久储存</h3><h4 id="一些表格">一些表格</h4><table><thead><tr><th style="text-align:center">方法</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">f.close()</td><td style="text-align:center">关闭文件对象</td></tr><tr><td style="text-align:center">f.flush()</td><td style="text-align:center">将文件对象中的缓存数据写入到文件中(不一定有效)</td></tr><tr><td style="text-align:center">f.read(size=-1,/)</td><td style="text-align:center">从文件对象中读取指定数量的字符(或者遇到EOF停止) ;当未指定该参数，或该参数为负值的时候，读取剩余的所有字符</td></tr><tr><td style="text-align:center">f.readable()</td><td style="text-align:center">判断该文件对象是否支持读取(如果返回的值为False,则调用read()方法会导致OSError异常)</td></tr><tr><td style="text-align:center">f.readline(size=-1,/)</td><td style="text-align:center">从文件对象中读取一行字符串(包括换行符)，如果指定了size 参数，则表示读取size个字符</td></tr><tr><td style="text-align:center">f.seek(offset,whence=0,/)</td><td style="text-align:center">修改文件指针的位置，从whence参数指定的位置(0代表文件起始位置，1代表当前位置，2代表文件末尾)偏移offset个字节，返回值是新的索引位置</td></tr><tr><td style="text-align:center">f.seekable()</td><td style="text-align:center">判断该文件对象是否支持修改文件指针的位置(如果返回的值为False, 则调用seek(),tell(), truncate()方法都会导致 OSError异常)</td></tr><tr><td style="text-align:center">f.tell()</td><td style="text-align:center">返回当前文件指针在文件对象中的位置</td></tr><tr><td style="text-align:center">f.truncate(pos=None,/)</td><td style="text-align:center">将文件对象截取到pos的位置，默认是截取到文件指针当前指定的位置</td></tr><tr><td style="text-align:center">f.write(text,/)</td><td style="text-align:center">将字符串写入到文件对象中，并返回写入的字符数量(字符串的长度)</td></tr><tr><td style="text-align:center">f.writable()</td><td style="text-align:center">判断该文件对象是否支持写入(如果返回的值为False,则调用write()方法会导致OSEror异常)</td></tr><tr><td style="text-align:center">f.writelines(lines,/)</td><td style="text-align:center">将一系列字符串写入到文件对象中(不会自动添加换行符，所以通常是人为地加在每个字符串的末尾)</td></tr></tbody></table><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">file</td><td style="text-align:center">指定一个将要打开的文件的路径（绝对路径和相对路径）</td></tr><tr><td style="text-align:center">mode</td><td style="text-align:center">可选参数，指定文件的打开模式。</td></tr></tbody></table><p>指定文件打开模式有下面这些：</p><table><thead><tr><th style="text-align:center">字符串</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">‘r’</td><td style="text-align:center">读取(默认)</td></tr><tr><td style="text-align:center">‘w’</td><td style="text-align:center">写入(如果文件已存在则先截断清空文件)</td></tr><tr><td style="text-align:center">‘x’</td><td style="text-align:center">排他性创建文件(如果文件已存在则打开失败)</td></tr><tr><td style="text-align:center">‘a’</td><td style="text-align:center">追加(如果文件已存在则在末尾追加内容)，注1</td></tr><tr><td style="text-align:center">‘b’</td><td style="text-align:center">二进制模式，注2</td></tr><tr><td style="text-align:center">‘t’</td><td style="text-align:center">文本模式(默认)，注3</td></tr><tr><td style="text-align:center">‘+’</td><td style="text-align:center">更新文件(读取和写入)</td></tr></tbody></table><h4 id="路径处理">路径处理</h4><ul><li><p>pathlib是从python3.4后才有的（交互模式下）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"><span class="comment">#从哪一模块单独导入一个部分，后面再调用就不需要加上模块名了</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Path.cwd()<span class="comment">#获取当前目录的路径</span></span><br><span class="line">WindowsPath(<span class="string">&#x27;C:/Users/古古怪怪/Desktop/python&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p = Path(<span class="string">&#x27;C:/Users/古古怪怪/Desktop/python&#x27;</span>) <span class="comment">#注意，P要大写，不然会报错</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q = p /<span class="string">&quot;FishC.txt&quot;</span> <span class="comment">#/表示在后面添加路径</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q</span><br><span class="line">WindowsPath(<span class="string">&#x27;C:/Users/古古怪怪/Desktop/python/FishC.txt&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p.is_dir()<span class="comment">#is_dir()判断是不是一个文件夹</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.is_dir()</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p.is_file() <span class="comment">#is_file()判断是不是一个文件</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.is_file() </span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.exists()  <span class="comment">#exists判断路径存不存在</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Path(<span class="string">&quot;C:/404&quot;</span>).exists()</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p.name<span class="comment">#获取路径最后一部分</span></span><br><span class="line"><span class="string">&#x27;python&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.name </span><br><span class="line"><span class="string">&#x27;FishC.txt&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.stem<span class="comment">#获取文件的文件名</span></span><br><span class="line"><span class="string">&#x27;FishC&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.suffix<span class="comment">#获取文件的后缀</span></span><br><span class="line"><span class="string">&#x27;.txt&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p.parent <span class="comment">#获取文件的上级目录</span></span><br><span class="line">WindowsPath(<span class="string">&#x27;C:/Users/古古怪怪/Desktop&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p.parents<span class="comment">#获得逻辑祖先路径构成的一个不可变的序列</span></span><br><span class="line">&lt;WindowsPath.parents&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ps = p.parents<span class="comment">#生成可迭代对象</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> each <span class="keyword">in</span> ps:<span class="comment">#用for读出来</span></span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(each)</span><br><span class="line"><span class="meta">... </span></span><br><span class="line">C:\Users\古古怪怪\Desktop</span><br><span class="line">C:\Users\古古怪怪</span><br><span class="line">C:\Users</span><br><span class="line">C:\</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ps[<span class="number">0</span>]<span class="comment">#也支持索引</span></span><br><span class="line">WindowsPath(<span class="string">&#x27;C:/Users/古古怪怪/Desktop&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ps[<span class="number">1</span>]</span><br><span class="line">WindowsPath(<span class="string">&#x27;C:/Users/古古怪怪&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p.parts<span class="comment">#将路径的各个部件拆分成元组</span></span><br><span class="line">(<span class="string">&#x27;C:\\&#x27;</span>, <span class="string">&#x27;Users&#x27;</span>, <span class="string">&#x27;古古怪怪&#x27;</span>, <span class="string">&#x27;Desktop&#x27;</span>, <span class="string">&#x27;python&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p.stat()<span class="comment">#查询文件或文件夹的状态信息</span></span><br><span class="line">os.stat_result(st_mode=<span class="number">16895</span>, st_ino=<span class="number">27303072740938163</span>, st_dev=<span class="number">175094868</span>, st_nlink=<span class="number">1</span>, st_uid=<span class="number">0</span>, st_gid=<span class="number">0</span>, st_size=<span class="number">4096</span>, st_atime=<span class="number">1651368431</span>, st_mtime=<span class="number">1651322737</span>, st_ctime=<span class="number">1649937154</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p.stat().st_size<span class="comment">#查询文件或文件夹的尺寸，单位是字节</span></span><br><span class="line"><span class="number">4096</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Path(<span class="string">&quot;./doc&quot;</span>) <span class="comment">#相对路径，其中.代表当前路径</span></span><br><span class="line">WindowsPath(<span class="string">&#x27;doc&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>path(<span class="string">&quot;../FishC&quot;</span>) <span class="comment">#相对路径，其中..代表上一级文件路径</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">NameError: name <span class="string">&#x27;path&#x27;</span> <span class="keyword">is</span> <span class="keyword">not</span> defined. Did you mean: <span class="string">&#x27;Path&#x27;</span>?   <span class="comment">#但失败了 </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Path(<span class="string">&quot;./doc&quot;</span>).resolve() <span class="comment">#resolve函数将相对路径转换为绝对路径</span></span><br><span class="line">WindowsPath(<span class="string">&#x27;C:/Users/古古怪怪/Desktop/python/doc&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p.iterdir()<span class="comment">#获取当前路径下所有子文件和子文件夹</span></span><br><span class="line">&lt;generator <span class="built_in">object</span> Path.iterdir at <span class="number">0x000001A1D4CD6570</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> each <span class="keyword">in</span> p.iterdir():</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(each)</span><br><span class="line"><span class="meta">... </span></span><br><span class="line">C:\Users\古古怪怪\Desktop\python\.idea</span><br><span class="line">C:\Users\古古怪怪\Desktop\python\<span class="number">20220424.</span>py</span><br><span class="line">C:\Users\古古怪怪\Desktop\python\<span class="number">20220427.</span>py</span><br><span class="line">C:\Users\古古怪怪\Desktop\python\FishC.txt</span><br><span class="line">C:\Users\古古怪怪\Desktop\python\hello.py</span><br><span class="line">C:\Users\古古怪怪\Desktop\python\test.py</span><br><span class="line">C:\Users\古古怪怪\Desktop\python\九九乘法表.py</span><br><span class="line">C:\Users\古古怪怪\Desktop\python\汉诺塔.py</span><br><span class="line">C:\Users\古古怪怪\Desktop\python\猜数.py</span><br><span class="line">C:\Users\古古怪怪\Desktop\python\猜数修改.py</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x <span class="keyword">for</span> x <span class="keyword">in</span> p.iterdir() <span class="keyword">if</span> x.is_file()]<span class="comment">#整理成列表 </span></span><br><span class="line">[WindowsPath(<span class="string">&#x27;C:/Users/古古怪怪/Desktop/python/20220424.py&#x27;</span>), WindowsPath(<span class="string">&#x27;C:/Users/古古怪怪/Desktop/python/20220427.py&#x27;</span>), WindowsPath(<span class="string">&#x27;C:/Users/古古怪怪/Desktop/python/FishC.txt&#x27;</span>), WindowsPath(<span class="string">&#x27;C:/Users/古古怪怪/Desktop/python/hello.py&#x27;</span>), WindowsPath(<span class="string">&#x27;C:/Users/古古怪怪/Desktop/python/test.py&#x27;</span>), WindowsPath(<span class="string">&#x27;C:/Users/古古怪怪/Desktop/python/九九乘法表.py&#x27;</span>), WindowsPath(<span class="string">&#x27;C:/Users/古古怪怪/Desktop/python/汉诺塔.py&#x27;</span>), WindowsPath(<span class="string">&#x27;C:/Users/古古怪怪/Desktop/python/猜数.py&#x27;</span>), WindowsPath(<span class="string">&#x27;C:/Users/古古怪怪/Desktop/python/猜数修改.py&#x27;</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n = p/<span class="string">&quot;FishC&quot;</span> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n.mkdir()<span class="comment">#创建文件夹，如果要创建的文件夹已经存在，那么就会报错</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n.mkdir(exist_ok=<span class="literal">True</span>)<span class="comment">#这样就会忽略报错信息</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n = p/<span class="string">&quot;FishC/A/B/C&quot;</span> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n.mkdir(exist_ok=<span class="literal">True</span>)<span class="comment">#如果创建的文件夹父目录有多个不存在的文件夹，那就会报错</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;D:\python\lib\pathlib.py&quot;</span>, line <span class="number">1173</span>, <span class="keyword">in</span> mkdir</span><br><span class="line">    self._accessor.mkdir(self, mode)</span><br><span class="line">FileNotFoundError: [WinError <span class="number">3</span>] 系统找不到指定的路径。: <span class="string">&#x27;C:\\Users\\古古怪怪\\Desktop\\python\\FishC\\A\\B\\C&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n.mkdir(parents=<span class="literal">True</span>,exist_ok=<span class="literal">True</span>)<span class="comment">#通过更改parents参数就可以避免，即创建了这些文件夹</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n = n /<span class="string">&quot;FishC.txt&quot;</span>     </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n</span><br><span class="line">WindowsPath(<span class="string">&#x27;C:/Users/古古怪怪/Desktop/python/FishC/A/B/C/FishC.txt&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = n.<span class="built_in">open</span>(<span class="string">&#x27;w&#x27;</span>)     </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.write(<span class="string">&quot;I love girls.&quot;</span>) </span><br><span class="line"><span class="number">13</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.close()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n.rename(<span class="string">&quot;haha&quot;</span>) <span class="comment">#重命名文件</span></span><br><span class="line">WindowsPath(<span class="string">&#x27;haha&#x27;</span>)<span class="comment">#忘记加后缀了，在最开始的目录可以找到这个文件</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m = Path(<span class="string">&#x27;haha.txt&#x27;</span>) <span class="comment">#移动文件位置</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m.replace(n) </span><br><span class="line">WindowsPath(<span class="string">&#x27;C:/Users/古古怪怪/Desktop/python/FishC/A/B/C/FishC.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n.unlink()<span class="comment">#删除文件指令</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n.parent.rmdir() <span class="comment">#删除文件夹指令，注意文件不为空时不能删除文件夹</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p = Path(<span class="string">&#x27;.&#x27;</span>) </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p.glob(<span class="string">&#x27;*.txt&#x27;</span>) <span class="comment">#查找文件夹符合条件的文件</span></span><br><span class="line">&lt;generator <span class="built_in">object</span> Path.glob at <span class="number">0x000001A1D4CD6570</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(p.glob(<span class="string">&#x27;*.txt&#x27;</span>)) </span><br><span class="line">[WindowsPath(<span class="string">&#x27;FishC.txt&#x27;</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(p.glob(<span class="string">&quot;*/*.py&quot;</span>)) <span class="comment">#表示下一级目录中所有包含.py后缀的文件</span></span><br><span class="line">[]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(p.glob(<span class="string">&quot;**/*.py&quot;</span>)) <span class="comment">#查找当前目录及该目录下的所有子目录</span></span><br><span class="line">[WindowsPath(<span class="string">&#x27;20220424.py&#x27;</span>), WindowsPath(<span class="string">&#x27;20220427.py&#x27;</span>), WindowsPath(<span class="string">&#x27;hello.py&#x27;</span>), WindowsPath(<span class="string">&#x27;test.py&#x27;</span>), WindowsPath(<span class="string">&#x27;九九乘 法表.py&#x27;</span>), WindowsPath(<span class="string">&#x27;汉诺塔.py&#x27;</span>), WindowsPath(<span class="string">&#x27;猜数.py&#x27;</span>), WindowsPath(<span class="string">&#x27;猜数修改.py&#x27;</span>)]</span><br></pre></td></tr></table></figure></li><li><p>with语句和上下文管理器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;haha.txt&quot;</span>,<span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="meta">... </span>    f.write(<span class="string">&#x27;I love girls.&#x27;</span>) <span class="comment">#操作文件的范围</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="number">13</span></span><br></pre></td></tr></table></figure></li><li><p>如果用正常的文件开启和关闭方法，如果写入函数后面有一个出错的，导致文件关闭指令美哟被执行到的话，要输入文件内容就仍在缓存区</p><p>改用成with就会确保执行问上下文管理器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;haha.txt&quot;</span>,<span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:<span class="comment">#</span></span><br><span class="line">     f.write(<span class="string">&#x27;I love girls.&#x27;</span>) <span class="comment">#操作文件的范围</span></span><br><span class="line"> <span class="number">1</span>/<span class="number">0</span></span><br><span class="line"><span class="comment">#程序会报错，但还会把I love girls.写入文档</span></span><br></pre></td></tr></table></figure></li><li><p>pickle将python对象序化，就是将Python对象转换为二进制字节流的过程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line">x, y, z = <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span></span><br><span class="line">s = <span class="string">&quot;FishC&quot;</span></span><br><span class="line">l = [<span class="string">&quot;小甲鱼&quot;</span>, <span class="number">520</span>, <span class="number">3.14</span>]</span><br><span class="line">d = &#123;<span class="string">&quot;one&quot;</span>: <span class="number">1</span>, <span class="string">&quot;two&quot;</span>: <span class="number">2</span>&#125;</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;data.pk1&quot;</span>, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    pickle.dump(x, f)</span><br><span class="line">    pickle.dump(y, f)</span><br><span class="line">    pickle.dump(z, f)</span><br><span class="line">    pickle.dump(s, f)</span><br><span class="line">    pickle.dump(l, f)</span><br><span class="line">    pickle.dump(d, f)</span><br><span class="line">    <span class="comment">#或者改写为 pickle.dump((x,y,z,s,l,d), f)</span></span><br><span class="line"><span class="comment">#会生成一堆鸟文，而且我的文件没法打开</span></span><br></pre></td></tr></table></figure><p>读取文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;data.pk1&quot;</span>, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    x = pickle.load(f)</span><br><span class="line">    y = pickle.load(f)</span><br><span class="line">    z = pickle.load(f)</span><br><span class="line">    s = pickle.load(f)</span><br><span class="line">    l = pickle.load(f)</span><br><span class="line">    d = pickle.load(f)</span><br><span class="line"><span class="comment">#或者改写为x,y,z,s,l,d =pickle.load(f)</span></span><br><span class="line"><span class="built_in">print</span>(x,y,z,s,l,d,sep=<span class="string">&#x27;\n&#x27;</span>)<span class="comment">#换一个文件编写</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="异常">异常</h3><h4 id="try语句">try语句</h4><ul><li><p>语法异常……</p></li><li><p>捕获并处理异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">检测范围</span><br><span class="line"><span class="keyword">except</span> [expression [<span class="keyword">as</span> identifier]]</span><br><span class="line">异常处理代码 <span class="comment">#try语句异常，才会执行这段</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="number">520</span> + <span class="string">&quot;girls&quot;</span></span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError:<span class="comment">#可以指定异常类型，其他异常还是会报错</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;出错了^o^,请修改&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="number">1</span> / <span class="number">0</span></span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError <span class="keyword">as</span> e:<span class="comment">#可以异常原因提取出来</span></span><br><span class="line"><span class="built_in">print</span>(e)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="number">1</span> / <span class="number">0</span></span><br><span class="line">    <span class="number">520</span> + <span class="string">&quot;girls&quot;</span></span><br><span class="line"><span class="keyword">except</span>(ZeroDivisionError,ValueError,TypeError):</span><br><span class="line">    <span class="keyword">pass</span> <span class="comment">#处理多个异常，但要用元组方式包裹起来</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="number">1</span> / <span class="number">0</span></span><br><span class="line">    <span class="number">520</span> + <span class="string">&quot;girls&quot;</span></span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;除数不能为零！&quot;</span>) <span class="comment">#捕获到异常就直接跳到了他指定额异常处理的代码，就往下走了，并没有去执行520 + &quot;girls&quot;</span></span><br><span class="line"><span class="keyword">except</span> ValueError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;值不正确。&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> TypeError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;类型不正确。&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>try-except-else语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="number">1</span> / <span class="number">1</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;逮到了！&quot;</span>) </span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;没逮到！&quot;</span>)<span class="comment">#没检测到异常的情况下执行else部分的语句</span></span><br></pre></td></tr></table></figure></li><li><p>try-except-finally语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="number">1</span> / <span class="number">1</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;逮到了！&quot;</span>) </span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;没逮到！&quot;</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;逮没逮到都吱一声~&quot;</span>)<span class="comment">#无论有没有异常都会执行的语句，哪怕是死循环最后强制停止也会执行一下</span></span><br><span class="line">    <span class="comment">#通常用于执行收尾工作</span></span><br><span class="line">    </span><br><span class="line">如：</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;FishC.txt&quot;</span>, <span class="string">&quot;W&quot;</span>)</span><br><span class="line">f.write(<span class="string">&quot;I love FishC.&quot;</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;出错了~&quot;</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>总结</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">检测范围</span><br><span class="line"><span class="keyword">except</span>[expression[<span class="keyword">as</span> identifier]]:</span><br><span class="line">异常处理代码</span><br><span class="line">[<span class="keyword">except</span> [expression[<span class="keyword">as</span> identifier]]:</span><br><span class="line">异常处理代码]*</span><br><span class="line">[<span class="keyword">else</span>:</span><br><span class="line">没有触发异常时执行的代码]</span><br><span class="line">[<span class="keyword">finally</span>:</span><br><span class="line">收尾工作执行的代码]</span><br><span class="line">或</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">检测范围</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">收尾工作执行的代码</span><br></pre></td></tr></table></figure></li><li><p>异常的嵌套</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="number">1</span> / <span class="number">0</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="number">520</span> + <span class="string">&quot;FishC&quot;</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;内部异常!&quot;</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;外部异常! &quot;</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;收尾工作~&quot;</span>)</span><br><span class="line"><span class="comment">#外部异常，收尾工作，上面的只能在交互界面使用（可能吧）</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="number">520</span> + <span class="string">&quot;FishC&quot;</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;内部异常! &quot;</span>)</span><br><span class="line"><span class="number">1</span>/<span class="number">0</span></span><br><span class="line"><span class="keyword">except</span> :</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;外部异常! &quot;</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;收尾工作~&quot;</span>)</span><br><span class="line"><span class="comment">#内部异常，外部异常，收尾工作</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="raise语句">raise语句</h4><ul><li><pre><code class="language-python">raise ValueError(&quot;值不正确&quot;)#自爆抛出异常raise qiguaiError(&quot;很奇怪啊&quot;)#不可以自定义没有的异常try:    1 / 0except:    raise ValueError(&quot;这样可不行~&quot;)#不能偷换错误<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 异常链</span><br><span class="line"></span><br><span class="line">  ```python</span><br><span class="line">  raise ValueError(<span class="string">&quot;值不正确&quot;</span>) from ZeroDivisionError</span><br></pre></td></tr></table></figure></code></pre></li></ul><h4 id="assert语句">assert语句</h4><ul><li><p>跟raise一样是主动引发异常，但只能引发一个异常，常用于代码调试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">&quot;haha&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">assert</span> s == <span class="string">&quot;haha&quot;</span> <span class="comment">#正确时没反应</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">assert</span> s != <span class="string">&quot;haha&quot;</span> <span class="comment">#错误是会抛出异常</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="利用异常来实现goto">利用异常来实现goto</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line"><span class="keyword">if</span> i &gt; <span class="number">3</span>:</span><br><span class="line"><span class="keyword">raise</span></span><br><span class="line"><span class="built_in">print</span>(i)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;被跳过~&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;被跳过~&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;被跳过~&quot;</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;到这儿来了~&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="异常大全">异常大全</h3><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">BaseException</td><td style="text-align:center">所有异常的基类</td></tr><tr><td style="text-align:center">SystemExit</td><td style="text-align:center">解释器请求退出</td></tr><tr><td style="text-align:center">KeyboardInterrupt</td><td style="text-align:center">用户中断执行(通常是输入^C)</td></tr><tr><td style="text-align:center">Exception</td><td style="text-align:center">常规错误的基类</td></tr><tr><td style="text-align:center">StopIteration</td><td style="text-align:center">迭代器没有更多的值</td></tr><tr><td style="text-align:center">GeneratorExit</td><td style="text-align:center">生成器(generator)发生异常来通知退出</td></tr><tr><td style="text-align:center">StandardError</td><td style="text-align:center">所有的内建标准异常的基类</td></tr><tr><td style="text-align:center">ArithmeticError</td><td style="text-align:center">所有数值计算错误的基类</td></tr><tr><td style="text-align:center">FloatingPointError</td><td style="text-align:center">浮点计算错误</td></tr><tr><td style="text-align:center">OverflowError</td><td style="text-align:center">数值运算超出最大限制</td></tr><tr><td style="text-align:center">ZeroDivisionError</td><td style="text-align:center">除(或取模)零 (所有数据类型)</td></tr><tr><td style="text-align:center">AssertionError</td><td style="text-align:center">断言语句失败</td></tr><tr><td style="text-align:center">AttributeError</td><td style="text-align:center">对象没有这个属性</td></tr><tr><td style="text-align:center">EOFError</td><td style="text-align:center">没有内建输入,到达EOF 标记</td></tr><tr><td style="text-align:center">EnvironmentError</td><td style="text-align:center">操作系统错误的基类</td></tr><tr><td style="text-align:center">IOError</td><td style="text-align:center">输入/输出操作失败</td></tr><tr><td style="text-align:center">OSError</td><td style="text-align:center">操作系统错误</td></tr><tr><td style="text-align:center">WindowsError</td><td style="text-align:center">系统调用失败</td></tr><tr><td style="text-align:center">ImportError</td><td style="text-align:center">导入模块/对象失败</td></tr><tr><td style="text-align:center">LookupError</td><td style="text-align:center">无效数据查询的基类</td></tr><tr><td style="text-align:center">IndexError</td><td style="text-align:center">序列中没有此索引(index)</td></tr><tr><td style="text-align:center">KeyError</td><td style="text-align:center">映射中没有这个键</td></tr><tr><td style="text-align:center">MemoryError</td><td style="text-align:center">内存溢出错误(对于Python 解释器不是致命的)</td></tr><tr><td style="text-align:center">NameError</td><td style="text-align:center">未声明/初始化对象 (没有属性)</td></tr><tr><td style="text-align:center">UnboundLocalError</td><td style="text-align:center">访问未初始化的本地变量</td></tr><tr><td style="text-align:center">ReferenceError</td><td style="text-align:center">弱引用(Weak reference)试图访问已经垃圾回收了的对象</td></tr><tr><td style="text-align:center">RuntimeError</td><td style="text-align:center">一般的运行时错误</td></tr><tr><td style="text-align:center">NotImplementedError</td><td style="text-align:center">尚未实现的方法</td></tr><tr><td style="text-align:center">SyntaxError</td><td style="text-align:center">Python 语法错误</td></tr><tr><td style="text-align:center">IndentationError</td><td style="text-align:center">缩进错误</td></tr><tr><td style="text-align:center">TabError</td><td style="text-align:center">Tab 和空格混用</td></tr><tr><td style="text-align:center">SystemError</td><td style="text-align:center">一般的解释器系统错误</td></tr><tr><td style="text-align:center">TypeError</td><td style="text-align:center">对类型无效的操作</td></tr><tr><td style="text-align:center">ValueError</td><td style="text-align:center">传入无效的参数</td></tr><tr><td style="text-align:center">UnicodeError</td><td style="text-align:center">Unicode 相关的错误</td></tr><tr><td style="text-align:center">UnicodeDecodeError</td><td style="text-align:center">Unicode 解码时的错误</td></tr><tr><td style="text-align:center">UnicodeEncodeError</td><td style="text-align:center">Unicode 编码时错误</td></tr><tr><td style="text-align:center">UnicodeTranslateError</td><td style="text-align:center">Unicode 转换时错误</td></tr><tr><td style="text-align:center">Warning</td><td style="text-align:center">警告的基类</td></tr><tr><td style="text-align:center">DeprecationWarning</td><td style="text-align:center">关于被弃用的特征的警告</td></tr><tr><td style="text-align:center">FutureWarning</td><td style="text-align:center">关于构造将来语义会有改变的警告</td></tr><tr><td style="text-align:center">OverflowWarning</td><td style="text-align:center">旧的关于自动提升为长整型(long)的警告</td></tr><tr><td style="text-align:center">PendingDeprecationWarning</td><td style="text-align:center">关于特性将会被废弃的警告</td></tr><tr><td style="text-align:center">RuntimeWarning</td><td style="text-align:center">可疑的运行时行为(runtime behavior)的警告</td></tr><tr><td style="text-align:center">SyntaxWarning</td><td style="text-align:center">可疑的语法的警告</td></tr><tr><td style="text-align:center">UserWarning</td><td style="text-align:center">用户代码生成的警告</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h2 id="20220502">20220502</h2><h3 id="类">类</h3><ul><li><p>对象 = 属性 + 方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#这是创造类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Turtle</span>:</span><br><span class="line">    head = <span class="number">1</span></span><br><span class="line">    eyes = <span class="number">2</span></span><br><span class="line">    legs = <span class="number">4</span></span><br><span class="line">    she1l = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">crawl</span>(<span class="params">se1f</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;人们总抱怨我动作慢吞吞的，殊不知如不积硅步，无以至千里的道理。&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;虽然我行动很慢,但如果遇到危险。还是会夺命狂奔的T_T&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;谁知盘中餐粒粒皆辛苦。吃得好。不如吃得饱~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sleep</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Zzzzz...&quot;</span>) </span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bite</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;人害被人欺，龟善被人骑，我可是会咬人的!&quot;</span>)</span><br><span class="line">        </span><br><span class="line">t1 = Turtle()<span class="comment">#一个对象被创造出来了，我们就可以修改他的属性值</span></span><br></pre></td></tr></table></figure></li><li><p>一个类创造了不同的对象，对象是不共享属性值</p></li><li><p>可以对对象创造一个动态属性</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 学习分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯单片机分享</title>
      <link href="/posts/fd8af8fc.html"/>
      <url>/posts/fd8af8fc.html</url>
      
        <content type="html"><![CDATA[<h1>心得体会</h1><p>第一次参加蓝桥杯单片机省级比赛，啥也不知道，这边浅浅说一下心得体会。平时训练时是由给头文件的，结果这次比赛没给头文件，心态就瞬间不好了。而且我感觉整体参加体会最大的就是熟练写出各个模块的代码后进行整合调试，平时有看视频有细致的原理讲解，但我感觉只是更好的理解代码怎么写的，可能跟需要理解原理的也就开始的10道选择题，但我觉得付出和回报不成正比，而且前面选择题还是不定向选，同时又不全是单片机的知识，还有一些数电模电的知识，所以我就直接放弃了前面的选择题，随便猜猜完事。而后面的编程题最好赛前有个整体的代码模块，记忆清楚，感觉花的时间也不至于太多，提前两个礼拜结束视频学习，后面背完代码，做真题不停的调试。</p><p>我看了电子设计工厂的课（要付费的，而且用鹏程万里播放器不好破解），听说小蜜蜂的课不错而且在B站上免费，可以看看那个结合本文把代码理解后背诵，不能理解就死记硬背。</p><p>程序地址：（范例程序）<a href="https://wwdt.lanzout.com/ixCqe0q90iuj">https://wwdt.lanzout.com/ixCqe0q90iuj</a></p><p>​（自己编写的程序）<a href="https://wwdt.lanzout.com/irybD0qg1awb">https://wwdt.lanzout.com/irybD0qg1awb</a></p><h1>基础模块</h1><ul><li><p>code关键字时定义成常量，不加code的话就是变量，相对来说，设置为常量所占用的内存更小</p></li><li><p><font color = 'red'>在导入头文件时，要在魔术棒里设置一下地址，即在C51选项页里的Include Paths添加一下路径。</font></p><p><img src="https://s1.ax1x.com/2023/03/15/pp39Xfs.png" alt="image-20230315172403905"></p></li><li><p><font color = 'red'>做到后面用底层驱动时，如果在运行程序时，发现怎么运行也不行，跟参考程序基本一样，那很有可能时我们的驱动版本太老了，需要更新以下。</font>链接：<a href="https://wwdt.lanzout.com/i2saU0qg1dkh">https://wwdt.lanzout.com/i2saU0qg1dkh</a></p></li></ul><h2 id="蜂鸣器">蜂鸣器</h2><ol><li><p>采用<strong>位赋值</strong>进行操作，并不是同时输出所赋的值，会有一瞬间打开其他的锁存器的可能性，所以采用<strong>字节赋值</strong>一次性输出。</p></li><li><p>采用字节赋值，会造成同时对两个外设操作，不能只操作一个外设。</p><p>更好的写法，通过标志位控制。让P0的数据同时输出，可以单独控制某一位。但没有节约内存。</p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> buzzer ctrl; <span class="comment">/*定义全局变量：buzzer ctrl来控蜂鸣器*/</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> relay_ctrl; <span class="comment">/*定义全局变量：relay_ctrl控继电器*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">vSystem_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">　　buzzer_ctrl=<span class="number">0</span>;<span class="comment">/*对变量buzzer_ctrl赋值*/</span></span><br><span class="line">　　relay_ctrl=l;<span class="comment">/*对变量relay_ctrl赋值*/</span></span><br><span class="line">　　PO=(buzzer_ctrl&lt;&lt;<span class="number">6</span>)|(relay_ctrl&lt;&lt;<span class="number">4</span>);<span class="comment">/*标志位控制*/</span></span><br><span class="line">　　P2=<span class="number">0xa0</span>;<span class="comment">/*打开锁存器，控制ULN2003输出*/</span></span><br><span class="line">　　P2=<span class="number">0</span>;<span class="comment">/*关闭锁存器，让74HC573输出保持稳定*/</span></span><br></pre></td></tr></table></figure><ol start="3"><li>P2 = 0XA0;    连锁记忆，a -&gt;啊-&gt;蜂鸣器</li></ol><h2 id="led灯">led灯</h2><ol><li><p>打开锁存器：P2 = 0X80;(记忆方法：LED灯有8个)</p><p>led灯低电平点亮</p></li><li><p>L8是高位，L1是低位。</p></li><li><p><font color = 'red'>利用共用体实现字节赋值和位赋值</font></p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> b0 : <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> b1 : <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> b2 : <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> b3 : <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> b4 : <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> b5 : <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> b6 : <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> b7 : <span class="number">1</span>;</span><br><span class="line">&#125;bits;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 共用一个字节，所以对b进行操作会对hex产生影响，同理对hex操作会对b产生影响</span></span><br><span class="line"><span class="comment">// hex就是字节赋值，b就是位赋值</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">union</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> hex;</span><br><span class="line">    bits b;</span><br><span class="line">&#125;HexToBin;</span><br></pre></td></tr></table></figure><h2 id="定时器2">定时器2</h2><ol><li><p>时钟频率选12MHz</p></li><li><p>1T模式最多（65536/12）us；12T模式最多65536us</p></li><li><p>定时器2的终端服务编号是<font color = 'red'>12</font></p></li><li><p>一般设置成1ms中断，用于任务调度</p></li><li><p>可以在stc中的范例中打开定时器2的16位重装载模式 c语言版本</p></li><li><p>原理       &amp;与，用于清零</p><p>​                |或，用于置位（置1）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Timer2Init</span><span class="params">(<span class="type">void</span>)</span><span class="comment">//1毫秒@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line">AUXR &amp;= <span class="number">0xFB</span>;<span class="comment">//定时器时钟12T模式  FB = 1111 1011</span></span><br><span class="line">    <span class="comment">//把AUXR第三位清零,AUXR第三位是T2*12,即设置为工作在12分频模式</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//设置1ms溢出，即设置成64536 = 0XFC18,即高八位设置成0XFC,低八位设置成0X18</span></span><br><span class="line">T2L = <span class="number">0x18</span>;<span class="comment">//设置定时初值</span></span><br><span class="line">T2H = <span class="number">0xFC</span>;<span class="comment">//设置定时初值</span></span><br><span class="line"></span><br><span class="line">    AUXR |= <span class="number">0x10</span>;<span class="comment">//定时器2开始计时</span></span><br><span class="line">    <span class="comment">// 把AUXR第五位置1,AUXR的第五位是T2R,当为1时，允许定时器2运行</span></span><br><span class="line">    </span><br><span class="line">    IE2 |= <span class="number">0X04</span>;<span class="comment">//开定时器2中断</span></span><br><span class="line">    <span class="comment">// 将IE2的第三位，即ET2设置位1，让定时器2允许产生中断</span></span><br><span class="line">    </span><br><span class="line">    EA = <span class="number">1</span>;<span class="comment">//开启总中断</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="数码管">数码管</h2><ol><li><p>该芯片是共阳数码管，低电平亮</p></li><li><p>“鬼影”现象产生的原因是：在操作段选时，上一个COM处于打开状态</p><p>消影操作：在操作段选前，先关闭所有位选。</p></li></ol><h2 id="独立按键">独立按键</h2><ol><li><p>状态机法</p><p><img src="https://s1.ax1x.com/2023/03/13/ppQcClD.png" alt="image-20230311135238372"></p></li><li><p>独立按键没办法使用IAP15硬件仿真，因为P30 P31串口通讯被干扰</p></li><li><p>三行按键法</p><p><img src="https://s1.ax1x.com/2023/03/13/ppQRxDe.png" alt="image-20230311160936808"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">每按下一次S4，数码管的数字+1 ；（默认数字是0）</span></span><br><span class="line"><span class="comment">每按下一次S5，数码管的数字-1 ；</span></span><br><span class="line"><span class="comment">每按下一次S6，数码管的数字+10 ；</span></span><br><span class="line"><span class="comment">每按下一次S7，数码管的数字-10 ；</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//三行按键法</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Trg;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Cont;</span><br><span class="line"><span class="type">void</span> <span class="title function_">vBTN_Read_ThreeLine</span><span class="params">( <span class="type">void</span> )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> ReadData = P3^<span class="number">0xff</span>;</span><br><span class="line">    Trg = ReadData &amp; (ReadData ^ Cont);  <span class="comment">//判断短按</span></span><br><span class="line">    Cont = ReadData;<span class="comment">//判断长按</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">vBTN_ThreeLine_Process</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(cnt_key&gt;=<span class="number">10</span>)<span class="comment">//每十秒执行一次，可以进行消抖，抖动一般小于10ms</span></span><br><span class="line">&#123;</span><br><span class="line">cnt_key=<span class="number">0</span>;</span><br><span class="line">vBTN_Read_ThreeLine();</span><br><span class="line"><span class="keyword">if</span>(Trg &amp; <span class="number">0x08</span>)<span class="comment">//S4</span></span><br><span class="line">&#123;</span><br><span class="line">s4_number++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(Trg &amp; <span class="number">0x04</span>)<span class="comment">//S5</span></span><br><span class="line">&#123;</span><br><span class="line">s4_number--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(Trg &amp; <span class="number">0x02</span>)<span class="comment">//S6</span></span><br><span class="line">&#123;</span><br><span class="line">s4_number+=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(Trg &amp; <span class="number">0x01</span>)<span class="comment">//S7</span></span><br><span class="line">&#123;</span><br><span class="line">s4_number-=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="矩阵按键">矩阵按键</h2><ul><li><p>行、列扫描</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//没有实现消抖、松手检测（按键单次触发）</span></span><br><span class="line"><span class="comment">//矩阵键盘 - 获取键值</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">vKBD_KeyIO</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> key_io = <span class="number">0</span>;</span><br><span class="line">    P3=<span class="number">0xf0</span>;P4=<span class="number">0xff</span>;<span class="comment">//列扫描，低四位输出0，读取高四位的值</span></span><br><span class="line">    <span class="keyword">if</span>(P44==<span class="number">0</span>) key_io=<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span>(P42==<span class="number">0</span>) key_io=<span class="number">8</span>;</span><br><span class="line">    <span class="keyword">if</span>(P35==<span class="number">0</span>) key_io=<span class="number">12</span>;</span><br><span class="line">    <span class="keyword">if</span>(P34==<span class="number">0</span>) key_io=<span class="number">16</span>;</span><br><span class="line"></span><br><span class="line">    P3=<span class="number">0x0f</span>;P4=<span class="number">0x00</span>;<span class="comment">//行扫描，高四位输出0，读取低四位的值</span></span><br><span class="line">    <span class="keyword">if</span>(P33==<span class="number">0</span>) key_io=key_io + <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(P32==<span class="number">0</span>) key_io=key_io + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(P31==<span class="number">0</span>) key_io=key_io + <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(P30==<span class="number">0</span>) key_io=key_io + <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> key_io;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//矩阵键盘处理函数</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> cnt_kbd;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> key_val;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> s4_number;</span><br><span class="line"><span class="type">void</span> <span class="title function_">vKBD_Process</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(cnt_kbd&gt;=<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cnt_kbd=<span class="number">0</span>;</span><br><span class="line">        key_val = vKBD_KeyIO();</span><br><span class="line">        <span class="keyword">if</span>(key_val==<span class="number">4</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            s4_number++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//数码管操作函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">vSMG_Process</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    smg_buf[<span class="number">0</span>]=smg_code[key_val/<span class="number">100</span>];</span><br><span class="line">    smg_buf[<span class="number">1</span>]=smg_code[key_val/<span class="number">10</span>%<span class="number">10</span>];</span><br><span class="line">    smg_buf[<span class="number">2</span>]=smg_code[key_val%<span class="number">10</span>];</span><br><span class="line">    smg_buf[<span class="number">3</span>]=<span class="number">0x00</span>;</span><br><span class="line">    smg_buf[<span class="number">4</span>]=<span class="number">0x00</span>;</span><br><span class="line">    smg_buf[<span class="number">5</span>]=smg_code[s4_number/<span class="number">100</span>];</span><br><span class="line">    smg_buf[<span class="number">6</span>]=smg_code[s4_number/<span class="number">10</span>%<span class="number">10</span>];</span><br><span class="line">    smg_buf[<span class="number">7</span>]=smg_code[s4_number%<span class="number">10</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>状态机法</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//矩阵键盘 - 状态机法</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">vKBD_KeyIO</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> key_io = <span class="number">0</span>;</span><br><span class="line">P3=<span class="number">0xf0</span>;P4=<span class="number">0xff</span>;<span class="comment">//列扫描</span></span><br><span class="line"><span class="keyword">if</span>(P44==<span class="number">0</span>) key_io=<span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span>(P42==<span class="number">0</span>) key_io=<span class="number">8</span>;</span><br><span class="line"><span class="keyword">if</span>(P35==<span class="number">0</span>) key_io=<span class="number">12</span>;</span><br><span class="line"><span class="keyword">if</span>(P34==<span class="number">0</span>) key_io=<span class="number">16</span>;</span><br><span class="line"></span><br><span class="line">P3=<span class="number">0x0f</span>;P4=<span class="number">0x00</span>;<span class="comment">//行扫描</span></span><br><span class="line"><span class="keyword">if</span>(P33==<span class="number">0</span>) key_io=key_io + <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(P32==<span class="number">0</span>) key_io=key_io + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(P31==<span class="number">0</span>) key_io=key_io + <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(P30==<span class="number">0</span>) key_io=key_io + <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> key_io;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KEY_NO   0  <span class="comment">//无按键状态，用于判断是否按下</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KEY_DOWN 1  <span class="comment">//有按键按下状态，判断是否为抖动</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KEY_UP   2  <span class="comment">//等待松手状态，判断是否弹起</span></span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">vKBD_Read_State</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">unsigned</span> <span class="type">char</span> key_state = <span class="number">0</span>; <span class="comment">// 定义key_state为静态变量，用于保存每次按键的状态</span></span><br><span class="line"><span class="comment">// key_io:读取的IO状态, key_return:返回的键值;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> key_io = <span class="number">0</span>, key_return = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">key_io = vKBD_KeyIO();</span><br><span class="line"><span class="keyword">switch</span>(key_state) </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">case</span> KEY_NO:     <span class="comment">//无按键状态，用于判断是否按下</span></span><br><span class="line"><span class="keyword">if</span>(key_io) key_state = KEY_DOWN; </span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> KEY_DOWN:    <span class="comment">//有按键按下状态，判断是否为抖动</span></span><br><span class="line"><span class="keyword">if</span>(key_io)</span><br><span class="line">&#123;</span><br><span class="line">key_state = KEY_UP;</span><br><span class="line">key_return = key_io;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">key_state = KEY_NO;  </span><br><span class="line"><span class="keyword">break</span>;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> KEY_UP: <span class="comment">//等待松手状态，判断是否弹起</span></span><br><span class="line"><span class="keyword">if</span>(key_io==<span class="number">0</span>) key_state = KEY_NO; </span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> key_return; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//矩阵键盘处理函数</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> cnt_kbd;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> s4_number;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> key_val;</span><br><span class="line"><span class="type">void</span> <span class="title function_">vKBD_Process</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(cnt_kbd&gt;=<span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">cnt_kbd=<span class="number">0</span>;</span><br><span class="line">key_val = vKBD_Read_State();</span><br><span class="line"><span class="keyword">if</span>(key_val==<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line">s4_number++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//数码管操作函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">vSMG_Process</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(key_val)</span><br><span class="line">&#123;</span><br><span class="line">smg_buf[<span class="number">0</span>]=smg_code[key_val/<span class="number">100</span>];</span><br><span class="line">smg_buf[<span class="number">1</span>]=smg_code[key_val/<span class="number">10</span>%<span class="number">10</span>];</span><br><span class="line">smg_buf[<span class="number">2</span>]=smg_code[key_val%<span class="number">10</span>];</span><br><span class="line">smg_buf[<span class="number">3</span>]=<span class="number">0x00</span>;</span><br><span class="line">smg_buf[<span class="number">4</span>]=<span class="number">0x00</span>;</span><br><span class="line">smg_buf[<span class="number">5</span>]=smg_code[s4_number/<span class="number">100</span>];</span><br><span class="line">smg_buf[<span class="number">6</span>]=smg_code[s4_number/<span class="number">10</span>%<span class="number">10</span>];</span><br><span class="line">smg_buf[<span class="number">7</span>]=smg_code[s4_number%<span class="number">10</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 要补上初始化代码</span></span><br><span class="line">vTimer2_Init();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">vSMG_Process();</span><br><span class="line">vKBD_Process();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//中断服务程序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">vTimer2_ISR</span><span class="params">()</span> interrupt 12     <span class="comment">//中断入口</span></span><br><span class="line">&#123;</span><br><span class="line">cnt_kbd++;</span><br><span class="line">vSMG_Display();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>三行代码法</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Trg_KBD; </span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Cont_KBD; </span><br><span class="line"><span class="type">void</span> <span class="title function_">vKBD_Read_ThreeLine</span><span class="params">()</span> </span><br><span class="line">&#123; </span><br><span class="line">    <span class="comment">// 取反；由于取反，trg为高电平表示为按下</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> ReadData = vKBD_KeyIO_ThreeLine() ^ <span class="number">0xff</span>;  </span><br><span class="line">    Trg_KBD  = ReadData &amp; (ReadData ^ Cont_KBD); <span class="comment">//起一个清零作用</span></span><br><span class="line">    Cont_KBD = ReadData; <span class="comment">//按键单次触发</span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>完整的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;STC15F2K60S2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//0~9的共阴表示，使用时按位取反。</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> code smg_code[] = &#123;<span class="number">0x3F</span>,<span class="number">0x06</span>,<span class="number">0x5B</span>,<span class="number">0x4F</span>,<span class="number">0x66</span>,<span class="number">0x6D</span>,<span class="number">0x7D</span>,<span class="number">0x07</span>,<span class="number">0x7F</span>,<span class="number">0x6F</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer2Init</span><span class="params">(<span class="type">void</span>)</span><span class="comment">//1毫秒@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line">AUXR &amp;= <span class="number">0xFB</span>;<span class="comment">//定时器时钟12T模式</span></span><br><span class="line">T2L = <span class="number">0x18</span>;<span class="comment">//设置定时初值</span></span><br><span class="line">T2H = <span class="number">0xFC</span>;<span class="comment">//设置定时初值</span></span><br><span class="line">AUXR |= <span class="number">0x10</span>;<span class="comment">//定时器2开始计时</span></span><br><span class="line">IE2 |= <span class="number">0X04</span>;</span><br><span class="line">EA = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 矩阵键盘 - 三行按键</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">ucKBD_KeyIO_ThreeLine</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> key_io = <span class="number">0xff</span>;</span><br><span class="line">P3=<span class="number">0xf0</span>;P4=<span class="number">0xff</span>;<span class="comment">//列扫描</span></span><br><span class="line"><span class="keyword">if</span>(P44==<span class="number">0</span>) key_io=<span class="number">0x70</span>;</span><br><span class="line"><span class="keyword">if</span>(P42==<span class="number">0</span>) key_io=<span class="number">0xb0</span>;</span><br><span class="line"><span class="keyword">if</span>(P35==<span class="number">0</span>) key_io=<span class="number">0xd0</span>;</span><br><span class="line"><span class="keyword">if</span>(P34==<span class="number">0</span>) key_io=<span class="number">0xe0</span>;</span><br><span class="line"></span><br><span class="line">P3=<span class="number">0x0f</span>;P4=<span class="number">0x00</span>;<span class="comment">//行扫描</span></span><br><span class="line"><span class="keyword">if</span>(P33==<span class="number">0</span>) key_io=key_io | <span class="number">0x07</span>;</span><br><span class="line"><span class="keyword">if</span>(P32==<span class="number">0</span>) key_io=key_io | <span class="number">0x0b</span>;</span><br><span class="line"><span class="keyword">if</span>(P31==<span class="number">0</span>)key_io=key_io | <span class="number">0x0d</span>;</span><br><span class="line"><span class="keyword">if</span>(P30==<span class="number">0</span>) key_io=key_io | <span class="number">0x0e</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> key_io;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Trg_KBD; </span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Cont_KBD; </span><br><span class="line"><span class="type">void</span> <span class="title function_">vKBD_Read_ThreeLine</span><span class="params">()</span> </span><br><span class="line">&#123; </span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> ReadData = ucKBD_KeyIO_ThreeLine() ^ <span class="number">0xff</span>;  </span><br><span class="line">    Trg_KBD  = ReadData &amp; (ReadData ^ Cont_KBD); </span><br><span class="line">    Cont_KBD = ReadData; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//矩阵键盘处理函数</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> cnt_kbd;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> kbd_number;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> key_val;</span><br><span class="line"><span class="type">void</span> <span class="title function_">vKBD_Process</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(cnt_kbd&gt;=<span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">cnt_kbd=<span class="number">0</span>;</span><br><span class="line">vKBD_Read_ThreeLine();</span><br><span class="line">key_val = Cont_KBD;</span><br><span class="line"><span class="keyword">if</span>(Trg_KBD==<span class="number">0x88</span>)<span class="comment">//S4</span></span><br><span class="line">&#123;</span><br><span class="line">kbd_number++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(Trg_KBD==<span class="number">0x11</span>)<span class="comment">//S19</span></span><br><span class="line">&#123;</span><br><span class="line">kbd_number--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//数码管操作函数</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> smg_buf[<span class="number">8</span>];</span><br><span class="line"><span class="type">void</span> <span class="title function_">vSMG_Process</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">smg_buf[<span class="number">0</span>]=smg_code[key_val/<span class="number">16</span>];</span><br><span class="line">smg_buf[<span class="number">1</span>]=smg_code[key_val%<span class="number">16</span>];</span><br><span class="line">smg_buf[<span class="number">2</span>]=<span class="number">0x00</span>;</span><br><span class="line">smg_buf[<span class="number">3</span>]=<span class="number">0x00</span>;</span><br><span class="line">smg_buf[<span class="number">4</span>]=<span class="number">0x00</span>;</span><br><span class="line">smg_buf[<span class="number">5</span>]=smg_code[kbd_number/<span class="number">100</span>];</span><br><span class="line">smg_buf[<span class="number">6</span>]=smg_code[kbd_number/<span class="number">10</span>%<span class="number">10</span>];</span><br><span class="line">smg_buf[<span class="number">7</span>]=smg_code[kbd_number%<span class="number">10</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">P2 = <span class="number">0X80</span>;</span><br><span class="line">P0 = <span class="number">0XFF</span>;</span><br><span class="line">P2 = <span class="number">0XA0</span>;</span><br><span class="line">P0 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">Timer2Init();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">vSMG_Process();</span><br><span class="line">vKBD_Process();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数码管显示函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">vSMG_Display</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">unsigned</span> <span class="type">char</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//消除鬼影，在操作段选前，先关闭位选</span></span><br><span class="line">P0 = <span class="number">0X00</span>;</span><br><span class="line">P2 = <span class="number">0XC0</span>;</span><br><span class="line">P2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">P0 = ~smg_buf[i];</span><br><span class="line">P2 = <span class="number">0XE0</span>;</span><br><span class="line">P2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">P0 = <span class="number">0X01</span>&lt;&lt;i;</span><br><span class="line">P2 = <span class="number">0XC0</span>;</span><br><span class="line">P2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">8</span>) i=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//中断服务程序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">vTimer2_ISR</span><span class="params">()</span> interrupt 12     <span class="comment">//中断入口</span></span><br><span class="line">&#123;</span><br><span class="line">cnt_kbd++;</span><br><span class="line">vSMG_Display();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1>其他模块</h1><h2 id="DS18B20温度传感器">DS18B20温度传感器</h2><ol><li><p>电路图（实体在右上角，U5）</p><p><img src="https://s1.ax1x.com/2023/03/13/ppQciOH.png" alt="image-20230312191048622"></p></li><li><p>特性</p><ol><li>1-Wire协议（<font color='red'>仅用一个IO口</font>就可以通讯）</li><li>拥有独立64位ID</li><li>多点测温应用</li><li><font color='red'>无需外部元件</font></li><li>可以由数据线供电</li><li>测量温度范围：<font color='red'>-55℃~+125℃</font></li><li>在-10℃~+85℃，有<font color='red'>±0.5℃的精度</font>(常量的精准度、误差量)</li><li>可选择<font color='red'>9位~12位</font>温度<font color='red'>分辨率</font>（测量的刻度）</li><li>转换12位分辨率的温度，最多需要<font color='red'>750ms</font></li></ol></li><li><p>1-Wire单总线协议</p><ul><li><p>初始化DS18B20芯片</p><p><img src="https://s1.ax1x.com/2023/03/13/ppQWC4I.png" alt="image-20230312195953099"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//DS18B20芯片初始化</span></span><br><span class="line">bit <span class="title function_">Init_DS18B20</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 在头文件里有sbit DQ = P1^4;操作</span></span><br><span class="line">bit initflag = <span class="number">0</span>; <span class="comment">// 返回存不存在DS18B20芯片</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 51单片机发送信息，来判断是否有该模块</span></span><br><span class="line">DQ = <span class="number">1</span>;</span><br><span class="line">Delay_OneWire(<span class="number">12</span>); </span><br><span class="line">DQ = <span class="number">0</span>;<span class="comment">// 做一个下拉操作，来引起协议</span></span><br><span class="line">Delay_OneWire(<span class="number">80</span>); </span><br><span class="line">DQ = <span class="number">1</span>;         <span class="comment">// 释放总线bus</span></span><br><span class="line">Delay_OneWire(<span class="number">10</span>); <span class="comment">// 延时60us后进行判断</span></span><br><span class="line">initflag = DQ;    <span class="comment">// 若存在该模块，就会告诉总线存在该模块</span></span><br><span class="line">Delay_OneWire(<span class="number">5</span>);</span><br><span class="line">  </span><br><span class="line"><span class="keyword">return</span> initflag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>向DS18S20写一个字节</p><p><img src="https://s1.ax1x.com/2023/03/13/ppQckmd.png" alt="image-20230312200003938"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过单总线向DS18B20写一个字节</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_DS18B20</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">DQ = <span class="number">0</span>;</span><br><span class="line">DQ = dat&amp;<span class="number">0x01</span>;   <span class="comment">// 保留dat的最低位</span></span><br><span class="line">Delay_OneWire(<span class="number">5</span>);<span class="comment">// 延时80us</span></span><br><span class="line">DQ = <span class="number">1</span>;</span><br><span class="line">dat &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">Delay_OneWire(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>从DS18B20读一个字节</p><p><img src="https://s1.ax1x.com/2023/03/13/ppQckmd.png" alt="image-20230312200102064"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//从DS18B20读取一个字节</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">Read_DS18B20</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> dat;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">DQ = <span class="number">0</span>;</span><br><span class="line">dat &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">DQ = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(DQ)</span><br><span class="line">&#123;</span><br><span class="line">dat |= <span class="number">0x80</span>;</span><br><span class="line">&#125;    </span><br><span class="line">Delay_OneWire(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>DS18B20暂存器</p><ul><li><p>原理图</p><p><img src="https://s1.ax1x.com/2023/03/13/ppQ28J0.png" alt="image-20230312201136832"></p><p><font color='red'>注</font>：</p><ol><li><p>byte4设置的应该是<strong>设置温度分辨率</strong></p><ol start="2"><li><p>基本上就用到字节0和字节1</p></li><li><p>字节0、1的高五位用来当符号位（0为正，1为负）</p><p>字节1位高位，字节2位低位，字节0和字节1共同用来表示温度</p><p><img src="https://s1.ax1x.com/2023/03/13/ppQ23iq.png" alt="image-20230312202031573"></p><p>我们所需的温度和得到的数有<font color = 'red'>0.0625倍</font>的关系，因为2^-4 = 0.0625</p><p>负数是以补码的形式存在的</p></li></ol></li></ol></li><li><p>操作例子</p><table><thead><tr><th style="text-align:center">控 制器 状态（51单片机）</th><th style="text-align:center">数据（ LSB在前）</th><th style="text-align:center">内容</th></tr></thead><tbody><tr><td style="text-align:center">TX（发）</td><td style="text-align:center">Reset(复位)</td><td style="text-align:center">主机发起复位脉冲</td></tr><tr><td style="text-align:center">RX（收）</td><td style="text-align:center">Presense(存在)</td><td style="text-align:center">存在脉冲</td></tr><tr><td style="text-align:center">TX</td><td style="text-align:center">CCh</td><td style="text-align:center">Skip ROM 命令（跳过ROM的指令）</td></tr><tr><td style="text-align:center">TX</td><td style="text-align:center">44h</td><td style="text-align:center">转换温度，等待750ms一般</td></tr><tr><td style="text-align:center">TX</td><td style="text-align:center">4Eh</td><td style="text-align:center">Write Scratchpad 命令（用不到）</td></tr><tr><td style="text-align:center">TX</td><td style="text-align:center">&lt;两个数据字节&gt;</td><td style="text-align:center">写两个字节到暂存器（TH 和 TL）（用不到）</td></tr><tr><td style="text-align:center">TX</td><td style="text-align:center">复位</td><td style="text-align:center">复位脉冲</td></tr><tr><td style="text-align:center">RX</td><td style="text-align:center">存在</td><td style="text-align:center">存在脉冲</td></tr><tr><td style="text-align:center">TX</td><td style="text-align:center">CCh</td><td style="text-align:center">Skip ROM 命令</td></tr><tr><td style="text-align:center">TX</td><td style="text-align:center">BEh</td><td style="text-align:center">Read Scratchpad 命令（读温度指令）</td></tr><tr><td style="text-align:center">RX</td><td style="text-align:center">&lt;9 个数据字节&gt;</td><td style="text-align:center">读整个暂存器加上 CRC；控制器重新计算从暂存读到的 8 个数据字节的 CRC，把计算的 CRC 和读取的 CRC 进行比较，如果相同，控制器向下进行，如果不同，就重复读操作。（只用到前两个，前两个是温度数据）</td></tr><tr><td style="text-align:center">以下</td><td style="text-align:center">内容</td><td style="text-align:center">用不到</td></tr><tr><td style="text-align:center">TX</td><td style="text-align:center">复位</td><td style="text-align:center">复位脉冲</td></tr><tr><td style="text-align:center">RX</td><td style="text-align:center">存在</td><td style="text-align:center">存在脉冲</td></tr><tr><td style="text-align:center">TX</td><td style="text-align:center">CCh</td><td style="text-align:center">Skip ROM 命令</td></tr><tr><td style="text-align:center">TX</td><td style="text-align:center">48h</td><td style="text-align:center">Copy Scratchpad 命令；发出这条命令后，控制器必须等待 6ms 到拷贝操作完成。</td></tr><tr><td style="text-align:center">TX</td><td style="text-align:center">复位</td><td style="text-align:center">复位脉冲</td></tr><tr><td style="text-align:center">RX</td><td style="text-align:center">存在</td><td style="text-align:center">存在脉冲，完成。</td></tr></tbody></table></li></ul></li><li><p>程序编写的注意点</p><ul><li><p>将底层驱动里的onewire.c和onewire.h拷贝到Listings当中去，如果Listings有其他的部分，根据需要自行放置；移动好了后，需要在vision中进行添加。</p></li><li><p>源代码修改</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Delay_OneWire</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 注：我们所用的芯片比该模块快12倍，要修改</span></span><br><span class="line">&#123;</span><br><span class="line">t = t * <span class="number">12</span>;</span><br><span class="line">  <span class="keyword">while</span>(t--);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>温度读取代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// onewire.c中的代码</span></span><br><span class="line"><span class="type">float</span> <span class="title function_">fRead_Temperature</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">float</span> temp_return;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> low,high;</span><br><span class="line">Init_DS18B20();</span><br><span class="line">Write_DS18B20(<span class="number">0XCC</span>); <span class="comment">// 跳过读取ROM</span></span><br><span class="line">Write_DS18B20(<span class="number">0x44</span>); <span class="comment">// 启动温度转换</span></span><br><span class="line"><span class="comment">// 不加上Delay延时，等待温度转换完成，直接去读取暂存器</span></span><br><span class="line">Init_DS18B20();</span><br><span class="line">Write_DS18B20(<span class="number">0XCC</span>); <span class="comment">// 跳过读取ROM</span></span><br><span class="line">Write_DS18B20(<span class="number">0xBE</span>); <span class="comment">// 获取暂存器数据</span></span><br><span class="line">low = Read_DS18B20();<span class="comment">// 温度低8位数据 </span></span><br><span class="line">high = Read_DS18B20();<span class="comment">// 温度高8位数据</span></span><br><span class="line">temp_return = (high &lt;&lt; <span class="number">8</span> | low) * <span class="number">0.0625f</span>; <span class="comment">// 读取到的数乘0.0625即为温度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> temp_return;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主程序中的读取温度</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> temp_quan;</span><br><span class="line"><span class="comment">// 因为温度的分辨率是小数点后四位</span></span><br><span class="line">temp_quan = (<span class="type">unsigned</span> <span class="type">long</span>)(fRead_Temperature()*<span class="number">10000</span>); </span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="IIC协议">IIC协议</h2><ol><li><p>特点：IIC总线上的每个器件都有一个特定的器件地址</p></li><li><p>主设备访问从设备的一般过程如下：</p><ul><li>假设主设备想要向从设备发送数据：<br>1.主发送器发送START条件并寻址从接收器<br>2.主发送器将数据发送到从接收器<br>3.主发送器以STOP条件终止传输</li><li>如果主设备想要从从设备接收/读取数据：<br>1.主发送器发送START条件并寻址从接收器<br>2.主接收器发送请求读取的寄存器<br>3.主接收器从从发送器接收数据<br>4.主发送器以STOP条件终止传输</li></ul></li><li><p>START和STOP条件</p><p>当SCL为高电平时，SDA线上 由高到低的转换定义了START条件。 当SCL为高电平时，SDA线上由低到高的转换定义了STOP条件。</p><p><img src="https://s1.ax1x.com/2023/03/15/pp3VBqI.png" alt="image-20230315180525762"></p></li><li><p>数据有效性和字节格式</p><ul><li><p>一个字节由SDA线上的8位组成</p></li><li><p><font color = 'red'>数据首先传输最高位</font>（MSB），onewire是先发送低位。</p></li><li><p><font color = 'red'>SDA线上的数据必须在时钟周期的高电平期间保持稳定</font>，因为当SCL为高电平时数据线的变化被解释为控制命令（START或STOP）</p><p><img src="https://s1.ax1x.com/2023/03/15/pp3Vod0.png" alt="image-20230315180834390"></p></li></ul></li><li><p>确认（ACK）和不确认（NACK）</p><ul><li><p>每个数据字节（包括地址字节）后跟一个来自接收方的ACK位。（可以是主机给从机发送数据，也可以是从机给主机发送数据）</p></li><li><p>在接收方发送ACK之前，发送方必须释放SDA线。</p></li><li><p>当在ACK/NACK相关时钟周期期间SDA线保持高电平时，这被解释为NACK。有几个条件会导致生成NACK：<u>（暂时了解即可）</u></p><ul><li>通信方无法接收或发送，因为它正在执行某些实时功能，并且尚未准备好开始与主站通信。</li><li>在传输期间，接收方获取它不理解的数据或命令。</li><li>在传输期间，接收方不能再接收任何数据字节。</li><li>主接收器完成读取数据并通过NACK向从设备指示。</li></ul><p><img src="https://s1.ax1x.com/2023/03/15/pp3ZeeI.png" alt="image-20230315181441761"></p></li></ul></li><li><p>IIC数据传输</p><ol><li><p>向从器件写入数据</p><p><strong>SCL只能是主设备</strong></p><p><img src="https://s1.ax1x.com/2023/03/15/pp3ZMY8.png" alt="image-20230315181640469"></p><p>第一块灰色区域：S表示发送开始命令。第一个7bit是用来选择从设备的地址。最后一位R/W来选择是接受数据还是发送数据。当为1时表示选择read，进行读数据；当为0时表示选择write，进行写数据。</p><p>第二块灰色区域：8bit表示数据写到哪个地址位置（<strong>左边为高位</strong>）</p><p>第三块灰色区域：8bit表示要写的数据（<strong>左边为高位</strong>）</p><p>ACK都是表示应答位</p></li><li><p>从从机读取数据</p><p><img src="https://s1.ax1x.com/2023/03/15/pp3Z4pD.png" alt="image-20230315182557414"></p><p>基本和写入数据一样，只是有个Sr表示重新进行操作，告诉从机要读数据了。</p></li></ol></li><li><p><font color = 'red'>总结</font>：时钟信号SCL为高时，SDA必须保持稳定！</p><ul><li>故SCL为低时，SDA上的电平才可以变化！</li><li>写数据时：SCL为低时，改变SDA!</li><li>读数据时：SCL为高时，读取IO电平！</li><li>编程是针对51单片机</li></ul></li></ol><h2 id="AT24C02-——EEPROM基础知识">AT24C02 ——EEPROM基础知识</h2><ol><li><p>电路图</p><p><img src="https://s1.ax1x.com/2023/03/15/pp3nWt0.png" alt="image-20230315192600284"></p><p>器件地址：1010 000（R/W）  <strong>0XA0</strong>表示51向AT24C02<strong>写数据</strong> <strong>0XA1</strong>表示51向AT24C02<strong>读数据</strong></p><p>WP是写保护管脚，当WP为高电平时，AT24C02无法写入数据。正常是接地的</p></li><li><p>特性</p><ol><li>低压和标压版本；</li><li>AT24C02→256*8（2K）;</li><li>IIC协议；</li><li>通讯降噪；</li><li>双向传输协议；</li><li>400KHz通讯速率；</li><li>硬件写保护；</li><li>写入周期(5ms)</li><li>高可靠性：1百万次写入；数据可存100年！</li></ol></li><li><p>内部存储结构（可以存256个字节、可以用8个字节来寻址、8个字节就是一页）</p><p><img src="https://s1.ax1x.com/2023/03/15/pp3KnG6.png" alt="image-20230315195213675"></p><h3 id="程序部分（需要字节读写）">程序部分（需要字节读写）</h3></li><li><p>写一个字节</p><p><img src="https://s1.ax1x.com/2023/03/15/pp3KCxU.png" alt="image-20230315195012106"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">vDelay_Ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> ms)</span><span class="comment">//@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> k;<span class="comment">//应该将k定义成unsigned int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;ms;k++)</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">12</span>;</span><br><span class="line">j = <span class="number">169</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 写AT24C02(需要自己编写)</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">vWrite_EEPROM</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> add,<span class="type">unsigned</span> <span class="type">char</span> dat)</span></span><br><span class="line">&#123;</span><br><span class="line">IIC_Start();</span><br><span class="line">IIC_SendByte(<span class="number">0XA0</span>);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line">IIC_SendByte(add);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line">IIC_SendByte(dat);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line">IIC_Stop();</span><br><span class="line">vDelay_Ms(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>任意字节的读</p><p><img src="https://s1.ax1x.com/2023/03/15/pp3K0sg.png" alt="image-20230315195606360"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 读AT24C02（需要自己编写）</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">ucRead_EEPROM</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> add)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> dat;</span><br><span class="line">IIC_Start();</span><br><span class="line">IIC_SendByte(<span class="number">0XA0</span>);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line">IIC_SendByte(add);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">IIC_Start();</span><br><span class="line">IIC_SendByte(<span class="number">0XA1</span>);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line">dat = IIC_RecByte();</span><br><span class="line">IIC_Ack(<span class="number">1</span>);</span><br><span class="line">IIC_Stop();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> dat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><font color = 'red'>注意点</font>：AT24C02的地址范围是0x00~0xff</p><p>​两次数据的写入间隔：5ms</p><p>​全新的EEPROM内部存储的是0XFF</p></li><li><p>EEPROM一个地址，只能存入一个字节的数据。争对不同类型的数据，需要分离成单个字节的数据。（见程序中关于不同类型数据读取的程序）</p></li><li><p>利用共用体进行读写：数据类型和char型形成共用体，用char型拆分数据类型，省去了拆分和移位操作(有能力就去了解)（未编写程序，自行摸索）</p></li></ol><h2 id="PCF8591-数模转换">PCF8591 数模转换</h2><ol><li><p>电路图</p><p><img src="https://s1.ax1x.com/2023/03/18/ppJGxyR.png" alt="image-20230318134635965"></p><p><img src="https://s1.ax1x.com/2023/03/18/ppJtEqI.png" alt="image-20230318143748537"></p><p>解读：四个AD输入口（AIN）、三个地址输入口（A）、Vref参考电压、AOUT接到J3上的倒数第三个引针</p></li><li><p>地址</p><p><img src="https://s1.ax1x.com/2023/03/18/ppJJeOI.png" alt="image-20230318135134784"></p><p>器件地址：1001 000（R/W），即0X90代表51向PCF8591写数据；0X91代表51向PCF8591读数据。</p></li><li><p>特性</p><ul><li><font color = 'red'>单电源供电</font>；</li><li>工作电压2.5V~6V;</li><li>低待机电流；</li><li><font color = 'red'>IIC通讯接口</font>；</li><li>器件地址可以定义(<font color = 'red'>A0~A2</font>);</li><li><font color = 'red'>4路模拟</font>量输入口(AD)，可以单端输入，也可以差分输入；</li><li>通道选择可以自动增量；</li><li>模拟输入范围是Vss~Vdd</li><li>片内跟踪保持电路</li><li><font color = 'red'>8位</font>逐次逼近型AD转换器</li><li>模拟输出的乘法<font color = 'red'>DAC</font></li><li>光敏电阻：光线越暗，阻值越高。即光线暗，AIN1口的电压越低。</li></ul></li><li><p>PCF8591控制字</p><p><img src="https://s1.ax1x.com/2023/03/18/ppJt3ss.png" alt="image-20230318144216858"></p></li><li><p>读取PCF8591</p><p><img src="https://s1.ax1x.com/2023/03/18/ppJttoV.png" alt="image-20230318144528125"></p><p><img src="https://s1.ax1x.com/2023/03/18/ppJtwz4.png" alt="image-20230318144651781"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 读取PFC8591</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">ucRead_ADC</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> ctrl_byte)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> adc_val;</span><br><span class="line">IIC_Start();</span><br><span class="line">IIC_SendByte(<span class="number">0x90</span>);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line">IIC_SendByte(ctrl_byte);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">IIC_Start();</span><br><span class="line">IIC_SendByte(<span class="number">0x91</span>);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line">adc_val = IIC_RecByte();</span><br><span class="line">IIC_Ack(<span class="number">1</span>); </span><br><span class="line">IIC_Stop();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> adc_val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">vADC_Process</span><span class="params">()</span>          <span class="comment">// 调用     </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(cnt_adc &gt;=<span class="number">10</span>)<span class="comment">// 由于ADC读取需要耗时0.75ms，所以10ms读取一次就够了</span></span><br><span class="line">&#123;</span><br><span class="line">cnt_adc=<span class="number">0</span>;</span><br><span class="line">EA = <span class="number">0</span>;              <span class="comment">// 防止变化太快</span></span><br><span class="line">ch1 = ucRead_ADC(<span class="number">0x41</span>);<span class="comment">// 光敏电阻的AD值 --通道1</span></span><br><span class="line">ch3 = ucRead_ADC(<span class="number">0x43</span>);<span class="comment">// 旋转电位器的AD值-通道2</span></span><br><span class="line">EA = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>中断干扰IIC通讯</p><p><font color = 'red'>中断函数里有对P2口进行字节赋值，导致IIC时许出错！</font>Display()里有对P2的整体赋值，导致P20 P21拉低</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对Display进行修改</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">vSMG_Display</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">unsigned</span> <span class="type">char</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//  需要控制，只对P27 P26 P25（高三位控制数码管的）进行操作</span></span><br><span class="line"><span class="comment">//P0 = 0;P2 = 0XC0;P2 = 0; // 消除鬼影</span></span><br><span class="line"><span class="comment">//P0 = ~smg_buf[i];P2 = 0XE0;P2 = 0;// 段选</span></span><br><span class="line"><span class="comment">//P0 = 0X01&lt;&lt;i;P2 = 0XC0;P2 = 0;// 位选</span></span><br><span class="line"><span class="comment">//i++;if(i == 8) i = 0;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这样就不用关中断了</span></span><br><span class="line">P0 = <span class="number">0</span>;P2 = P2 &amp; <span class="number">0X1F</span> | <span class="number">0XC0</span>;P2 &amp;= <span class="number">0x1f</span>; <span class="comment">// 消除鬼影</span></span><br><span class="line">P0 = ~smg_buf[i];P2 = P2 &amp; <span class="number">0X1F</span> | <span class="number">0XE0</span>;P2 &amp;= <span class="number">0x1f</span>;<span class="comment">// 段选</span></span><br><span class="line">P0 = <span class="number">0X01</span>&lt;&lt;i;P2 = P2 &amp; <span class="number">0X1F</span> | <span class="number">0XC0</span>;P2 &amp;= <span class="number">0x1f</span>;<span class="comment">// 位选</span></span><br><span class="line">i++;<span class="keyword">if</span>(i == <span class="number">8</span>) i = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>读取通道相反问题：当读取多个通道值并显示的时候，数码管上显示是反的</p><p><img src="https://s1.ax1x.com/2023/03/18/ppJdTgS.png" alt="image-20230318154017381"></p><p>每次A/D转换读到的数值都是上一次的转换结果，采取<font color = 'red'>读两次</font>的方式解决问题</p></li><li><p>ADC数值的转换</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> ch3_volt;</span><br><span class="line"><span class="comment">// 0~255 --&gt; 0~500 --&gt;0~5</span></span><br><span class="line">ch3_volt = ch3 *<span class="number">100</span>/<span class="number">51</span>;<span class="comment">//(51是255与要转换到的值（本题为5）之间的倍率关系、乘100为了除去小数）</span></span><br></pre></td></tr></table></figure><p><font color = 'red'>注</font>：该板子的供电电压并不是准确的5V，大约4.7V左右</p><p>区间范围（将AD值均分为1~5的数值）（256（总共有这么多的数）/5（份））</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ch3_1_5 = ch3 / (<span class="number">256</span>/<span class="number">5</span>)f +<span class="number">1</span> ;</span><br></pre></td></tr></table></figure></li><li><p>DA输出电压</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DAC输出      // 0.6ms以内完成，不适合放中断里</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> cnt_dac;</span><br><span class="line"><span class="type">void</span> <span class="title function_">vDAC_Process</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">unsigned</span> <span class="type">char</span> dac_val=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(cnt_dac&gt;=<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">cnt_dac=<span class="number">0</span>;</span><br><span class="line">vWrite_DAC(dac_val++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="DS1302-实时时钟的基础知识">DS1302 --实时时钟的基础知识</h2><ol><li><p>SPI协议</p><p>原理图（读写一个字节）</p><p><img src="https://s1.ax1x.com/2023/03/18/ppJAeU0.png" alt="image-20230318094451211">（写操作的)注：在时钟信号SCLK上升沿时，IO的数据被发送给DS1302</p></li></ol><p>​上升沿前，数据要保持稳定</p><p>​CE表示使能操作，但在驱动里面时用RST表示</p><p>​（读操作的）注：在时钟信号SCLK下降沿时，DS1302发来的数据可以被51单片机IO读取</p><p>​ 发送下降沿后，51单片机进行读取（D0为最低位）</p><ol start="2"><li><p>电路图</p><p><img src="https://s1.ax1x.com/2023/03/16/pp8rrQO.png" alt="image-20230316205959420">注：我们的板子上没有电池，所以每次使用之前要给时钟定时</p></li><li><p>特性</p><ul><li><p>实时时钟：<font color = 'red'>计时秒，分，时，日期，月分，星期，年，闰年；可计时到2100年</font></p></li><li><p>31个字节的RAM</p></li><li><p>串行I0口</p></li><li><p>工作电压2.0V~5.5V</p></li><li><p>在2.0V，电流小于300nA(低功耗)</p></li><li><p><font color = 'red'>单字节或多字节（突发模式）数据传输</font>，可用于读写时钟和RAM</p></li><li><p>8脚直插封装或者8脚贴片封装</p></li><li><p>三线通信接口（<font color = 'red'>三线SPI协议</font>）</p></li><li><p>TTL兼容</p></li><li><p>工作温度：-40℃~+85℃</p></li><li><p>和DS1202兼容</p></li><li><p>UL认证</p></li></ul></li></ol><p>​突发模式可以解决时间错误（仅作了解，比赛不用）</p><p>​<img src="https://s1.ax1x.com/2023/03/16/pp86MFA.png" alt="image-20230316211623436"></p><ol start="4"><li><p>寄存器与地址/指令字节</p><p><img src="https://s1.ax1x.com/2023/03/16/pp8sQ7d.png" alt="image-20230316211036743"></p><p><img src="https://s1.ax1x.com/2023/03/16/pp8sz4I.png" alt="image-20230316211218506"></p><ul><li><p>CH表示时钟暂停，一般都设为0，在芯片手册里的DS1302第七页</p></li><li><p>WP是写保护功能</p></li><li><p>最后一个90h、91h是用来充电用的，做了解即可，大概率用不到。</p></li></ul></li><li><p>BCD码，用十六进制表示十进制，例如：0x25表示十进制的25</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 十进制转BCD码宏定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DecToBCD(dec) (dec/10*16)+(dec%10)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// BCD码转十进制宏定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BCDToDec(bcd) (bcd/16*10)+(bcd%16)</span></span><br></pre></td></tr></table></figure></li><li><p>设置时间的流程(DS1302的底层驱动好像和视频里讲解的不同，回头研究下，尚未运行超过)</p><ol><li><p>关闭写保护</p></li><li><p>写入时钟数据（寄存器地址位偶数）</p></li><li><p>打开写保护</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">vClock_Set</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> hour,<span class="type">unsigned</span> <span class="type">char</span> minute,<span class="type">unsigned</span> <span class="type">char</span> second)</span></span><br><span class="line">&#123;</span><br><span class="line">Write_Ds1302_Byte(<span class="number">0X8E</span>,<span class="number">0X00</span>);<span class="comment">// 关闭写保护</span></span><br><span class="line">Write_Ds1302_Byte(<span class="number">0X80</span>,DecToBCD(second));<span class="comment">// 写入秒</span></span><br><span class="line">Write_Ds1302_Byte(<span class="number">0X82</span>,DecToBCD(minute));<span class="comment">// 写入分</span></span><br><span class="line">Write_Ds1302_Byte(<span class="number">0X84</span>,DecToBCD(hour));<span class="comment">// 写入时</span></span><br><span class="line">Write_Ds1302_Byte(<span class="number">0X8F</span>,<span class="number">0X00</span>);<span class="comment">// 打开写保护</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>读取时间的流程：直接调用读取DS1302的函数（寄存器地址为奇数）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 读取时间</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> hour,minute,second;</span><br><span class="line"><span class="type">void</span> <span class="title function_">vDS1302_Process</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">second = BCDToDec(Read_Ds1302_Byte(<span class="number">0x81</span>));</span><br><span class="line">minute = BCDToDec(Read_Ds1302_Byte(<span class="number">0x83</span>));</span><br><span class="line">hour = BCDToDec(Read_Ds1302_Byte(<span class="number">0x85</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="PWM脉冲宽度调制">PWM脉冲宽度调制</h2><ol><li><p>概念：利用微处理器的数字输出来对模拟电路进行控制的一种非常有效的技术</p><p>​占空比：高电平所占整个周期的时间（调整占空比相当于在调节有效值）</p></li><li><p>LED灯亮度调节</p><ol><li>LED跳过的频率最好为1kHz，太小的频率会导致LED灯闪烁</li><li>占空比调节可以控制LED的亮度；【注】由于LED是<font color = 'red'>共阳</font>接法，占空比越高，反而亮度越低</li><li>之前高电平时P34=1；对LED控制，可以用字节赋值，即led_ctrl = 0xff;</li></ol></li><li><p>数码管亮度调节</p><ol><li>在奇数亮度时，可能有些灯会显示不出来，由于分辨率问题；当为100分辨率的时候就不会存在这种情况（没试过）</li><li>一般要十个亮度的话，可以用二十个亮度分量来进行控制</li></ol></li></ol><h2 id="超声波">超声波</h2><ol><li><p>电路图：<img src="https://s1.ax1x.com/2023/03/20/ppNJgd1.png" alt="image-20230320194721565"></p></li><li><p>重点：<font color = 'red'>P10</font>管脚产生40kHz的方波</p><p>​当CX20106A接收到40kHz的信号时，会在第7脚产生一个<font color = 'red'>低电平</font>。即<font color = 'red'>P11</font>可以读取到<font color = 'red'>低电平</font>。</p><p>​跳帽按照板子要求的接好</p><p>​推荐一次发送8个方波</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥单片机 </tag>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在vscode中创建虚拟环境</title>
      <link href="/posts/b1580606.html"/>
      <url>/posts/b1580606.html</url>
      
        <content type="html"><![CDATA[<h1>在vscode中创建虚拟环境</h1><ol><li><p>用vscode打开你平时放代码的地方</p><p><img src="https://s1.ax1x.com/2023/03/25/ppDGZy6.png" alt="image-20230325141223554"></p></li><li><p>在终端输入指令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m venv 你想要的虚拟环境名称</span><br></pre></td></tr></table></figure><p>如下图所示：<img src="https://s1.ax1x.com/2023/03/25/ppDG1fA.png" alt="image-20230325141540641"></p></li><li><p>然后激活该虚拟环境</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">环境变量名称/Scripts/activate</span><br></pre></td></tr></table></figure><p>出现这个表示成功创建：<img src="https://s1.ax1x.com/2023/03/25/ppDGy60.png" alt="image-20230325141755514"></p><p>里面要重新安装你所需要的库：<img src="https://s1.ax1x.com/2023/03/25/ppDG6XV.png" alt="image-20230325141957241"></p><p>这个版本的pip在用清华源安装第三方库的时候可能会出现这种报错：ERROR: Cannot determine archive format of C:\Users\XXXXX\AppData\Local\Temp\pip-req-build-qkcf28dd</p><p>这就表示可能对该镜像源不信任，可以用以下命令来代替：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --trusted-host pypi.tuna.tsinghua.edu.cn 模块名</span><br></pre></td></tr></table></figure></li><li><p>如果已经安装了第三方库，但import后报错：could not be resolved。</p><p>这就需要到设置里设置Pylance的额外导入搜索解析路径</p><p>ctrl+，后，搜索python.analysis.extraPath，并新增一个路径，该路径为你环境下的site-packages的文件夹位置</p></li><li><p>退出虚拟环境只需要在终端输入：deactivate即可，前面的绿括号会消失</p></li><li><p>删除该虚拟环境只需要在deactivate后，到存放文件的路径处删除虚拟环境即可。</p></li><li><p>注：这个可能不适合用于创造不同python版本的虚拟环境</p></li></ol><h1>一些问题</h1><h2 id="在虚拟环境里使用matplotlib的问题">在虚拟环境里使用matplotlib的问题</h2><ol><li><p>在运行在原本环境没问题，但在虚拟环境里运行后出现如下的报错：</p><p>UserWarning: Matplotlib is currently using agg, which is a non-GUI backend.</p></li><li><p>将原本环境里的python安装路径里的tcl的tcl8.6文件夹复制到虚拟环境的Lib文件夹里</p><p>再将tk8.6复制到刚刚复制到虚拟环境里的tcl8.6文件夹里</p></li><li><p>光去搜索如何解决以上报错，都是说在matplotlib前加上下面内容</p><p>import matplotlib</p><p>matplotlib.use(‘TkAgg’)</p><p>一点用都没有，会接着报错找不到tkinter文件，然后去找怎么下载tkinter，但我在网上看到说这个tkinter是在系统层面的，光用pip来下载是没用的</p></li><li><p>当然一开始如果没有选择安装tc/tk的话可以在控制面板里的程序和功能选项对安装python的程序里右键选择更改，重新安装tc/tk。</p></li><li><p>参考文章：<a href="https://www.cnblogs.com/anpengapple/p/7471351.html">https://www.cnblogs.com/anpengapple/p/7471351.html</a></p></li></ol><h2 id="打包程序">打包程序</h2><ol><li><p>安装第三方库pyinstaller</p></li><li><p>在终端使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller -F -i 图表名.ico 程序名.py</span><br></pre></td></tr></table></figure></li><li><p>注意点：这个图标不适合直接修改图片后缀，最好在网上将.png转换成.ico格式</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技能分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
            <tag> 虚拟环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法与外挂标签写法汇总</title>
      <link href="/posts/2013454d.html"/>
      <url>/posts/2013454d.html</url>
      
        <content type="html"><![CDATA[<h1>1.Markdown语法自带格式</h1><div class="note info flat"><p>参考：<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解(10分钟学会)</a></p></div><div class="note warning flat"><p>注意：此页面偶尔会存在CSS冲突问题!</p></div><h2 id="1-1-代码块">1.1 代码块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-2-多级标题">1.2 多级标题</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>见本文章标题!</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-3-文字样式">1.3 文字样式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<s>删除</s>线演示</p><p><font size = 5>5号字</font><br><font face="黑体">黑体</font><br><font color=blue>蓝色</font></p><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note info flat"><p>上述要点可参考:<a href="https://blog.csdn.net/qq_43732429/article/details/108034518">【Markdown语法】字体颜色大小及文字底色设置</a></p></div><h2 id="1-4-引用">1.4 引用</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><blockquote><p>Java<br>二级引用演示<br>MySQL</p><blockquote><p>外键</p><p>事务</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>…</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-5-分割线">1.5 分割线</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><hr><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-6-列表-跟空格都可以">1.6 列表(*,+,-跟空格都可以)</h2><h3 id="1-6-1-无序列表">1.6.1 无序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> Java</span><br><span class="line"><span class="bullet">*</span> Python</span><br><span class="line"><span class="bullet">*</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> Java</span><br><span class="line"><span class="bullet">+</span> Python</span><br><span class="line"><span class="bullet">+</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Java</span><br><span class="line"><span class="bullet">-</span> Python</span><br><span class="line"><span class="bullet">-</span> ...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="1-6-2-有序列表">1.6.2 有序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 注意后面有空格</span></span><br><span class="line"><span class="bullet">1.</span> </span><br><span class="line"><span class="bullet">2.</span> </span><br><span class="line"><span class="bullet">3.</span> </span><br><span class="line"><span class="bullet">4.</span> </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li></li><li></li><li></li><li></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-7-图片">1.7 图片</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>本地图片:<br><img src="/assets/pusheencode.webp" alt="示例图片" style="zoom:50%;" /><br>在线图片:<br><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png" alt="code"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-8-表格">1.8 表格</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-9-公式">1.9 公式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>$$<br>\Gamma(z)=\int_0^\infty t^{z-1}e^{-t}dt.<br>$$</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1>2.Butterfly外挂标签</h1><div class="note info flat"><p>这部分参考安知鱼:<a href="https://anzhiy.cn/posts/7d58.html">基于Butterfly的外挂标签引入</a></p></div><h2 id="2-1-行内文本样式-text">2.1 行内文本样式 text</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-2-行内文本-span">2.2 行内文本 span</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-3-段落文本-p">2.3 段落文本 p</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。</li></ul><p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-4-引用note">2.4 引用note</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">通用配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">语法格式</button></li><li class="tab"><button type="button" data-href="#分栏-3">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-4">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-5">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border<span class="emphasis">_radius: 3</span></span><br><span class="line"><span class="emphasis">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line"><span class="emphasis">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line"><span class="emphasis">  light_</span>bg<span class="emphasis">_offset: 0</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 自带icon</span></span><br><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"><span class="section"># 外部icon</span></span><br><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.自带icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / primary / success / info / warning / danger ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】不显示 icon</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table><p>2.外部icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-5"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div>2.`modern`样式<div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div><p>3.<code>flat</code>样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><p>4.<code>disabled</code>样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>2.<code>modern</code>样式</p><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>3.<code>flat</code>样式</p><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>4.<code>disabled</code>样式</p><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了…</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-5-上标标签-tip">2.5 上标标签 tip</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li><code>自定义图标</code>: 支持fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-6-动态标签-anima">2.6 动态标签 anima</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="note info flat"><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.On DOM load（当页面加载时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>2.调整动画速度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>3.On hover（当鼠标悬停时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>4.On parent hover（当鼠标悬停在父级元素时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div>2.调整动画速度<div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div>3.On hover（当鼠标悬停时显示动画）<div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div>4.On parent hover（当鼠标悬停在父级元素时显示动画）<div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-7-复选列表-checkbox">2.7 复选列表 checkbox</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: plus, minus, times</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-8-单选列表-radio">2.8 单选列表 radio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-9-时间轴-timeline">2.9 时间轴 timeline</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选）[,color] %&#125;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>title</code>:标题/时间线</li><li><code>color</code>:<code>timeline</code>颜色:default(留空) / blue / pink / red / purple / orange / green</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></div></div><div class='timeline-item-content'><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></div></div><div class='timeline-item-content'><p>不需要额外处理。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></div></div><div class='timeline-item-content'><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-10-链接卡片-link">2.10 链接卡片 link</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-11-按钮-btns">2.11 按钮 btns</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;</code>标题<code>&lt;/b&gt;</code>和<code>&lt;p&gt;</code>描述文字<code>&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>wide</td><td>宽一点的按钮</td></tr><tr><td>fill</td><td>填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td>center</td><td>居中，按钮之间是固定间距</td></tr><tr><td>around</td><td>居中分散</td></tr><tr><td>grid2</td><td>等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td>grid3</td><td>等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td>grid4</td><td>等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td>grid5</td><td>等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>2.或者含有图标的按钮</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><div class="btns circle grid5">            <a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>          </div>2.或者含有图标的按钮<div class="btns rounded grid5">            <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p red'>专业版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p green'>免费版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-12-github卡片-ghcard">2.12 github卡片 ghcard</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><table><thead><tr><th><strong>参数名</strong></th><th>取值</th><th>释义</th></tr></thead><tbody><tr><td>hide</td><td>stars,commits,prs,issues,contribs</td><td>隐藏指定统计</td></tr><tr><td>count_private</td><td>true</td><td>将私人项目贡献添加到总提交计数中</td></tr><tr><td>show_icons</td><td>true</td><td>显示图标</td></tr><tr><td>theme</td><td>查阅:<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td>主题</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.用户信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard fomalhaut1998 %&#125; | &#123;% ghcard fomalhaut1998, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=buefy %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=onedark %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=algolia %&#125; | &#123;% ghcard fomalhaut1998, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><p>2.仓库信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.用户信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=calm&show_owner=true"/></a></td></tr></tbody></table><p>2.仓库信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-13-github徽标-ghbdage">2.13 github徽标 ghbdage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.基本参数,定义徽标左右文字和图标</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure><p>3.拓展参数，支持shields的API的全部参数内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.基本参数,定义徽标左右文字和图标</p><p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object></p><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><p><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object><br>//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object></p><p>3.拓展参数，支持shields的API的全部参数内容</p><p><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object><br>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-14-网站卡片-sites">2.14 网站卡片 sites</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="site-card-group"><a class="site-card" href="https://fomalhaut1998.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png"/><span class="title">fomalhaut1998</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://blog.mhuig.top"><div class="img"><img src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"/><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-15-行内图片-inlineimage">2.15 行内图片 inlineimage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>高度</code>：height=20px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-16-单张图片-image">2.16 单张图片 image</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>2.指定宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure><p>3.指定宽度并添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>4.设置占位背景色：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>2..指定宽度<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div>3.指定宽度并添加描述：<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>4.设置占位背景色：<div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-17-音频-audio">2.17 音频 audio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-18-视频-video">2.18 视频 video</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>对齐方向</code>：left, center, right</li><li><code>列数</code>：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.100%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure><p>2.50%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><p>3.25%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.100%宽度</p><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>2.50%宽度<div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div>3.25%宽度<div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-19-相册-gallery">2.19 相册 gallery</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>gallerygroup 相册图库</li></ul><table><thead><tr><th>参数名</th><th>释义</th></tr></thead><tbody><tr><td>name</td><td>图库名字</td></tr><tr><td>description</td><td>图库描述</td></tr><tr><td>link</td><td>链接到对应相册的地址</td></tr><tr><td>img-url</td><td>图库封面</td></tr></tbody></table><ul><li><p>gallery 相册</p><p>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 &#x27;/gallery/MC/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup Gundam 哦咧哇gundam哒！ &#x27;/gallery/Gundam/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png %&#125;</span><br><span class="line">&#123;% galleryGroup I-am-Akilar 某种意义上也算自拍吧 &#x27;/gallery/I-am-Akilar/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.gallerygroup 相册图库</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href='/gallery/Gundam/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href='/gallery/I-am-Akilar/'></a>  </figcaption>  </figure></div>2.gallery 相册<div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-20-折叠框-folding">2.20 折叠框 folding</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><!-- tab 参数配置 --><ol><li><p><code>颜色</code>：blue, cyan, green, yellow, red</p></li><li><p><code>状态</code>：状态填写 open 代表默认打开。</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-21-分栏-tab">2.21 分栏 tab</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>Unique name :</p><ul><li><p>选项卡块标签的唯一名称，不带逗号。</p></li><li><p>将在#id中用作每个标签及其索引号的前缀。</p></li><li><p>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</p></li><li><p>仅当前帖子/页面的URL必须是唯一的！</p></li></ul></li><li><p>[index]:</p><ul><li><p>活动选项卡的索引号。</p></li><li><p>如果未指定，将选择第一个标签（1）。</p></li><li><p>如果index为-1，则不会选择任何选项卡。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[Tab caption]:</p><ul><li><p>当前选项卡的标题。</p></li><li><p>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</p></li><li><p>如果未指定标题，但指定了图标，则标题将为空。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[@icon]:</p><ul><li><p>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</p></li><li><p>可以指定带空格或不带空格；</p></li><li><p>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</p></li><li><p>可选参数。</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>2.Demo 2 - 预设选择tabs</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>3.Demo 3 - 没有预设值</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.Demo 1 - 预设选择第一个【默认】</p><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>2.Demo 2 - 预设选择tabs</p><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>3.Demo 3 - 没有预设值</p><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-22-诗词标签-poem">2.22 诗词标签 poem</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><ol><li><code>title</code>：诗词标题</li><li><code>author</code>：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-23-阿里图标-icon">2.23 阿里图标 icon</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon icon-rat<span class="emphasis">_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-ox_</span>chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger<span class="emphasis">_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rabbit_</span>mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon<span class="emphasis">_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-snake_</span>si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse<span class="emphasis">_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-goat_</span>wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey<span class="emphasis">_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rooster_</span>you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog<span class="emphasis">_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-boar_</span>hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-24-特效标签wow">2.24 特效标签wow</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow [animete],[duration],[delay],[offset],[iteration] %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endwow %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>animate</code>: 动画样式，效果详见<a href="https://animate.style/">animate.css参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.flip动画效果。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>3.slideInRight动画效果，持续5s，延时5s</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__slideInRight,5s,5s %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note orange &#x27;fas fa-car&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__heartBeat,,5s,,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note red &#x27;fas fa-battery-half&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.flip动画效果。</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>3.slideInRight动画效果，持续5s，延时5s</p><div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' ><div class="note orange icon-padding modern"><i class="note-icon fas fa-car"></i><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p></div></div><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-25-进度条-progress">2.25  进度条 progress</h2><div class="note info flat"><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给HEXO文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen/">Cuteen</a>主题。</p></div><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>width</code>: 0到100的阿拉伯数字</li><li><code>color</code>: 颜色，取值有red,yellow,green,cyan,blue,gray</li><li><code>text</code>:进度条上的文字内容</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-26-注释-notation">2.26 注释 notation</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p><code>label</code>: 注释词汇</p></li><li><p><code>text</code>: 悬停显示的注解内容</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-27-气泡注释-bubble">2.27 气泡注释 bubble</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bubble [content] , [notation] ,[background-color] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>content</code>: 注释词汇</li><li><code>notation</code>: 悬停显示的注解内容</li><li><code>background-color</code>: 可选，气泡背景色。默认为“#71a4e3”</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span></span>，<span class="bubble-content">flex布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;</span></span>，<span class="bubble-content">transform变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span></span>，animation的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span></span>写法，还有今天刚看到的<span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span></span>属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-28-引用文献-reference">2.28 引用文献 reference</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% referto [id] , [literature] %&#125;</span><br><span class="line">&#123;% referfrom [id] , [literature] , [url] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>referto 引用上标</p><ul><li><p><code>id</code>: 上标序号内容，需与referfrom标签的id对应才能实现跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li></ul></li><li><p>referfrom 引用出处</p><ul><li><p><code>id</code>: 序号内容，需与referto标签的id对应才能实现 跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li><li><p><code>url</code>: 引用的参考文献链接，可省略</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Akilarの糖果屋(akilar.top)是一个私人性质的博客&#123;% referto &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27; %&#125;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架&#123;% referto &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27; %&#125;，Butterfly主题&#123;% referto &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">本项目参考了Volantis&#123;% referto &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27; %&#125;的标签样式。引入<span class="code">`[tag].js`</span>，并针对<span class="code">`butterfly`</span>主题修改了相应的<span class="code">`[tag].styl`</span>。在此鸣谢<span class="code">`Volantis`</span>主题众开发者。</span><br><span class="line">主要参考内容包括各个volantis的内置标签插件文档&#123;% referto &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27; %&#125;</span><br><span class="line">Butterfly主题的各个衍生魔改&#123;% referto &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27; %&#125;&#123;% referto &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27; %&#125;&#123;% referto &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27; %&#125;&#123;% referto &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% referfrom &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27;,&#x27;https://jq.qq.com/?<span class="emphasis">_wv=1027&amp;k=pGLB2C0N&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27;,&#x27;https://hexo.io/zh-cn/docs/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27;,&#x27;https://butterfly.js.org/posts/21cfbf15/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27;,&#x27;https://volantis.js.org/v5/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27;,&#x27;https://volantis.js.org/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27;,&#x27;https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27;,&#x27;https://lovelijunyi.gitee.io/posts/c898.html&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27;,&#x27;https://github.com/l-lin/font-awesome-animation&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27;,&#x27;https://www.antmoe.com/posts/3b43914f/&#x27; %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>Akilarの糖果屋(akilar.top)是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]"></span><sup class="reference"><a href="#referfrom_[1]">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Akilarの糖果屋群聊简介</span><span class="reference-title">参考资料</span></span></span>，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架<span class="hidden-anchor" id="referto_[2]"></span><sup class="reference"><a href="#referfrom_[2]">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span></span></span>，Butterfly主题<span class="hidden-anchor" id="referto_[3]"></span><sup class="reference"><a href="#referfrom_[3]">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span></span></span></p><p>本项目参考了Volantis<span class="hidden-anchor" id="referto_[4]"></span><sup class="reference"><a href="#referfrom_[4]">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span></span></span>的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个volantis的内置标签插件文档<span class="hidden-anchor" id="referto_[5]"></span><sup class="reference"><a href="#referfrom_[5]">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span></span></span><br>Butterfly主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]"></span><sup class="reference"><a href="#referfrom_[6]">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[7]"></span><sup class="reference"><a href="#referfrom_[7]">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[8]"></span><sup class="reference"><a href="#referfrom_[8]">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[9]"></span><sup class="reference"><a href="#referfrom_[9]">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span></span></span></p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://jq.qq.com/?_wv=1027&k=pGLB2C0N">Akilarの糖果屋群聊简介</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-29-PDF展示">2.29 PDF展示</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf 文件路径 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>文件路径</code>: 可以是相对路径或者是在线链接</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 1.本地文件:在md文件路径下创建一个同名文件夹，其内放pdf文件名为xxx.pdf的文件</span></span><br><span class="line">&#123;% pdf xxx.pdf %&#125;</span><br><span class="line"><span class="section"># 2.在线链接</span></span><br><span class="line">&#123;% pdf https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>2.在线链接(要放到最外层才能起作用)</p><pre><code>&lt;div class=&quot;row&quot;&gt;&lt;embed src=&quot;https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;&lt;/div&gt;</code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-30-Hexo-tag-map-插件">2.30 Hexo-tag-map 插件</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% + 标签值 + 经度 + 纬度 + 文本 + 缩放等级 + 宽 + 高 + 默认图层 + %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th style="text-align:center">地图名</th><th style="text-align:center">标签值 &lt;必填&gt;</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">缩放等级 (默认 14)</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">默认图层 (默认 1)</th></tr></thead><tbody><tr><td style="text-align:center">混合地图</td><td style="text-align:center">map</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~7</td></tr><tr><td style="text-align:center">谷歌地图</td><td style="text-align:center">googleMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~20</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">高德地图</td><td style="text-align:center">gaodeMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">百度地图</td><td style="text-align:center">baiduMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 4~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~2</td></tr><tr><td style="text-align:center">Geoq 地图</td><td style="text-align:center">geoqMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~5</td></tr><tr><td style="text-align:center">openstreet 地图</td><td style="text-align:center">openstreetMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">不支持此参数</td></tr></tbody></table><ol><li>参数之间，用英文逗号相隔</li><li>参数必须按上述事例顺序输入，不得为空</li><li>同一个页面，同一组经纬度值，只能插入一个相同标签值的地图 (若有需要，可以将第二个地图上，经度或纬度末尾删除一两个数)</li><li>参数取值必须在上述范围内</li><li>默认图层：即地图叠加层的值，默认常规地图还是卫星地图，可按地图显示顺序取值</li><li>缩放等级，数字越大，地图比例尺越小，显示的越精细</li><li>除标签值外，其他参数选填，但 每个参数的左边的参数必填</li><li>谷歌地图需要外网才能加载查看</li></ol><p>坐标获取：<a href="https://lbs.amap.com/tools/picker">高德地图坐标拾取系统</a> 、<a href="https://api.map.baidu.com/lbsapi/getpoint/index.html">百度地图坐标拾取系统</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% map 120.101101,30.239119 %&#125;</span><br><span class="line">&#123;% googleMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！ %&#125;</span><br><span class="line">&#123;% geoqMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！, 13, 90%, 320px, 3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div class="map-box"><div id="map-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div></div><script type="text/javascript">var normalm=L.tileLayer.chinaProvider('GaoDe.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Amap'});var imgm=L.tileLayer.chinaProvider('GaoDe.Satellite.Map',{maxZoom:20,minZoom:1,attribution:'Amap'});var imga=L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion',{maxZoom:20,minZoom:1,attribution:'Amap'});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'});routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1,attribution:'Google Maps'});var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:21,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm]),image=L.layerGroup([imgm,imga]);var baseLayers={"高德地图":normal,"智图地图":normalm1,"谷歌地图":normalMap,"高德卫星地图":imgm,"谷歌卫星地图":satelliteMap,"高德卫星标注":image,"谷歌卫星标注":routeMap};var mymap=L.map('map-120.101101-30.239119',{center:[30.239119,120.101101],zoom:14,layers:[normal],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);</script><br><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="googleMap-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:22,minZoom:1,attribution:'Google Maps'});var baseLayers={"谷歌地图":normalMap,"谷歌卫星图":satelliteMap,"谷歌卫星标注": routeMap};var overlayLayers={};var mymap=L.map("googleMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:14,layers:[normalMap],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="geoqMap-120.101101-30.239119" style="max-width:90%; height:320px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm2=L.tileLayer.chinaProvider('Geoq.Normal.PurplishBlue',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm3=L.tileLayer.chinaProvider('Geoq.Normal.Gray',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm4=L.tileLayer.chinaProvider('Geoq.Normal.Warm',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm5=L.tileLayer.chinaProvider('Geoq.Theme.Hydro',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm1,normalm2,normalm3,normalm4,normalm5]);var baseLayers={"智图地图":normalm1,"午夜蓝":normalm2,"灰色":normalm3,"暖色":normalm4,"水系":normalm5};var mymap=L.map("geoqMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:13,layers:[normalm3],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-31-隐藏块">2.31 隐藏块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>content：要隐藏的内容</li><li>display：展示前按钮显示的文字（可选）</li><li>bg：按钮的背景颜色（可选）</li><li>color：按钮显示的文字的颜色（可选）</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock 点我预览, blue %&#125;</span><br><span class="line">这里有张图片：</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;image (1)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:67%;&quot;</span> /&gt;</span></span></span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="hide-block"><button type="button" class="hide-button" style="background-color:  blue;">点我预览    </button><div class="hide-content"><p>这里有张图片：<br><img src="https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb" alt="image (1)" style="zoom:67%;" /></p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 演示 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 外挂标签 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
